# CrayGNU version by Jean Favre (CSCS)

easyblock = 'CMakeMake'

name = 'ParaView'
version = '5.5.2'
versionsuffix='-OSMesa'

homepage = "http://www.paraview.org"
description = "ParaView is a scientific parallel visualizer."

toolchain = {'name': 'CrayGNU', 'version': '18.08'}
toolchainopts = {'pic': True, 'usempi': True, 'verbose': False}

download_suffix = 'download.php?submit=Download&version=v%(version_major_minor)s&type=source&os=all&downloadFile='
source_urls = ['http://www.paraview.org/paraview-downloads/%s' % download_suffix]
sources = ["ParaView-v%(version)s.tar.gz"]

patches = ['nek5000reader.patch']

python = 'python'
pyver = '3'
pysuff = '-%s%s' % (python, pyver)
dependencies = [
    ('Boost', '1.67.0', '-python3'),
    ('h5py', '2.8.0', '-python3-serial'),
    ('ospray', '1.6.1'),
    ('Mesa', '17.2.8'),
    ('cray-python/3.6.1.1', EXTERNAL_MODULE)
]

builddependencies = [('CMake', '3.12.0','', True)]

separate_build_dir = True

maxparallel = 16

# I removed the use of ${CRAY_MPICH_DIR} which caused problem with 18.07. This was required in previous version which had another bug.
# the new cmake is now able to figure out everything by himself.
configopts = '-DVTK_Group_MPI:BOOL=ON '
configopts += '-DMPI_C_COMPILER=cc -DMPI_CXX_COMPILER=CC '
configopts += '-DBUILD_TESTING:BOOL=OFF -DBUILD_EXAMPLES:BOOL=OFF -DPARAVIEW_ENABLE_CATALYST:BOOL=OFF -DPARAVIEW_BUILD_PLUGIN_SierraPlotTools=OFF '
configopts += '-DCMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO="-Wl,-rpath,${EBROOTLLVM}/lib -L${EBROOTLLVM}/lib" '
configopts += '-DPARAVIEW_ENABLE_PYTHON:BOOL=ON -DPYTHON_EXECUTABLE=${EBROOTPYTHON}/bin/python3 -DPARAVIEW_USE_MPI:BOOL=ON '
configopts += '-DCMAKE_BUILD_TYPE=RelWithDebInfo -DBUILD_SHARED_LIBS:BOOL=ON '
configopts += '-DVTK_USE_SYSTEM_HDF5:BOOL=ON '
configopts += '-DPARAVIEW_USE_VTKM:BOOL=OFF '
# use TBB for on-the-node parallelism
configopts += '-DVTK_SMP_IMPLEMENTATION_TYPE=TBB -DTBB_INCLUDE_DIR:PATH=/opt/intel/compilers_and_libraries/linux/tbb/include '
configopts += '-DTBB_LIBRARY_RELEASE:FILEPATH=${EBROOTOSPRAY}/lib/libtbb.so -DTBB_MALLOC_LIBRARY_RELEASE:FILEPATH=${EBROOTOSPRAY}/lib/libtbbmalloc.so '
#
configopts += '-DPARAVIEW_ENABLE_XDMF3:BO0L=OFF -DPARAVIEW_INSTALL_DEVELOPMENT_FILES:BOOL=ON -DBoost_INCLUDE_DIR=${EBROOTBOOST}/include '
configopts += '-DPARAVIEW_BUILD_QT_GUI:BOOL=OFF -DPARAVIEW_ENABLE_WEB:BOOL=OFF -DModule_vtkGeovisCore=ON -DModule_vtklibproj4=ON '
# Rendering is headless with Mesa
configopts += '-DVTK_USE_X:BOOL=OFF -DOPENGL_gl_LIBRARY= -DOPENGL_glu_LIBRARY= '
configopts += '-DVTK_OPENGL_HAS_OSMESA:BOOL=ON -DOSMESA_INCLUDE_DIR:PATH=${EBROOTMESA}/include -DOSMESA_LIBRARY:FILEPATH=${EBROOTMESA}/lib/libOSMesa.so '
#
configopts += ' -DPARAVIEW_USE_VISITBRIDGE:BOOL=ON '
# CSCS specific for OSPRAY Rendering
configopts += ' -DPARAVIEW_USE_OSPRAY:BOOL=ON '
configopts += ' -DOSPRAY_INSTALL_DIR=${EBROOTOSPRAY} '
configopts += ' -DPARAVIEW_EXTERNAL_PLUGIN_DIRS:STRING="/users/jfavre/Projects/BioMedical2;/users/jfavre/Projects/Jackson/src;/users/jfavre/Projects/Tipsy;/users/jfavre/Projects/Gadget;/users/jfavre/Projects/Adamek;/users/jfavre/Projects/Lucg;/users/jfavre/Projects/Elephant" '
# no GPU means no NVIDIA IndeX lib
configopts += ' -DPARAVIEW_BUILD_PLUGIN_pvNVIDIAIndeX:BOOL=OFF '

# Or consult https://gitlab.kitware.com/vtk/vtk/blob/master/Documentation/dev/git/data.md
# and download ExternalData to $EASYBUILD_SOURCEPATH and adjust -DExternalData_OBJECT_STORES accordingly
# Without internet connection, comment the following two lines (configopts and prebuildopts)
# configopts += '-DExternalData_OBJECT_STORES=%(builddir)s/ExternalData '
# The ParaView server can be cranky, test downloads are quite often failing, especially in the case
# of parallel downloads. Using ; insted of && gives a second chance to download the test files, if the
# first serial attempt would fail.
#prebuildopts = 'make VTKData ;'

modextravars = { 'LD_LIBRARY_PATH':'/opt/python/3.6.1.1/lib:$::env(LD_LIBRARY_PATH)'}

sanity_check_paths = {
    'files': ['bin/pvbatch', 'bin/pvserver'],
    'dirs': [],
}

moduleclass = 'vis'
