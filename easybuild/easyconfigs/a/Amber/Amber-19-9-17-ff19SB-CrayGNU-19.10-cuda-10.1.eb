# @author: victor holanda rusu

easyblock = 'MakeCp'

name = 'Amber'
local_patchlevels = (9, 17) # (AmberTools, Amber)
version = '19-%s-%s-ff19SB' % (local_patchlevels[0], local_patchlevels[1])
versionsuffix = '-cuda-%(cudashortver)s'

homepage = 'http://ambermd.org/'
description = """Amber (Assisted Model Building with Energy Refinement)
is software for performing molecular dynamics and structure prediction"""
whatis = [ "Amber 18 && AmberTools 19",
           "AmberTools patch level 9",
           "Amber patch level 17",
           "Contains the Ff19SB force field"]

toolchain = {'name': 'CrayGNU', 'version': '19.10'}
toolchainopts = { 'verbose': False }

sources = [
    '/apps/common/UES/easybuild/sources/a/Amber/Amber18.tar.bz2',
    '/apps/common/UES/easybuild/sources/a/Amber/AmberTools19.tar.bz2'
]

patches = [
    'ambertool19-compile.patch'
]
dependencies = [
    ('bzip2', '1.0.6'),
    ('zlib', '1.2.11'),
    ('craype-accel-nvidia60', EXTERNAL_MODULE),
    ('cudatoolkit/10.1.105_3.27-7.0.1.1_4.1__ga311ce7', EXTERNAL_MODULE),
]

builddependencies = [
    ('cray-hdf5', EXTERNAL_MODULE),
    ('cray-netcdf', EXTERNAL_MODULE),
]

buildininstalldir = True

# single make process since parallel builds might fail
maxparallel = 1

prebuildopts = 'cd .. && mv amber18/* . && '
prebuildopts += 'export AMBERHOME=%(builddir)s; export CUDA_HOME=$CUDATOOLKIT_HOME;'
prebuildopts += './update_amber --update-to %s/%s && ' % ("AmberTools", local_patchlevels[0])
prebuildopts += './update_amber --update-to %s/%s && ' % ("Amber", local_patchlevels[1])
#prebuildopts += './update_amber --update && '
#
# Setting updates to N, because we already have applied them
# Compiling several times in order to consolidate the Amber installation into a single module
#prebuildopts += './configure -noX11 -netcdfstatic -static --skip-python --with-netcdf $EBROOTNETCDF gnu <<< N && '
prebuildopts += './configure      -noX11 --skip-python --with-netcdf $EBROOTNETCDF gnu <<< N && '
prebuildopts += "echo 'PMEMD_CU_INCLUDES += -I$(MPICH_DIR)/include' >> config.h;"
prebuildopts += 'make -j && make install && '

#pushd ../lib/reax && make -f Makefile.gfortran && popd &&
prebuildopts += 'pushd amber18 && git clone https://github.com/csimmerling/ff19SB_201907.git && pushd ff19SB_201907 && bash ./copy.sh && popd && popd &&'
#prebuildopts += 'pushd amb && ./copy.sh && popd && '
prebuildopts += './update_amber --apply-patch=update.201906 && '

prebuildopts += './configure      -noX11 --skip-python --with-netcdf $EBROOTNETCDF gnu <<< N && '
prebuildopts += "echo 'PMEMD_CU_INCLUDES += -I$(MPICH_DIR)/include' >> config.h;"
prebuildopts += 'make -j && make install && '

prebuildopts += './configure      -noX11 -openmp --skip-python --with-netcdf $EBROOTNETCDF gnu <<< N && '
prebuildopts += "echo 'PMEMD_CU_INCLUDES += -I$(MPICH_DIR)/include' >> config.h;"
prebuildopts += 'make -j && make install && '

prebuildopts += './configure -cuda -noX11 -openmp --skip-python --with-netcdf $EBROOTNETCDF gnu <<< N && '
prebuildopts += "echo 'PMEMD_CU_INCLUDES += -I$(MPICH_DIR)/include' >> config.h;"
prebuildopts += 'make -j && make install && '

prebuildopts += './configure -mpi -noX11 -openmp --skip-python --with-netcdf $EBROOTNETCDF gnu <<< N && '
prebuildopts += "echo 'PMEMD_CU_INCLUDES += -I$(MPICH_DIR)/include' >> config.h;"
prebuildopts += 'make -j && make install && '

prebuildopts += './configure -mpi -noX11         --skip-python --with-netcdf $EBROOTNETCDF gnu <<< N && '
prebuildopts += "echo 'PMEMD_CU_INCLUDES += -I$(MPICH_DIR)/include' >> config.h;"
prebuildopts += 'make -j && make install && '

prebuildopts += './configure -cuda -mpi -noX11         --skip-python --with-netcdf $EBROOTNETCDF gnu <<< N && '
prebuildopts += "echo 'PMEMD_CU_INCLUDES += -I$(MPICH_DIR)/include' >> config.h;"
prebuildopts += 'make -j && make install && '

buildopts = 'install'

files_to_copy = []

sanity_check_paths = {
    'files' : [ 'bin/pmemd.cuda.MPI', 'bin/pmemd.MPI', 'bin/pmemd' ],
    'dirs'  : [],
}

modextravars = {
    'AMBERHOME' : '%(builddir)s',
}

moduleclass = 'bio'
