# @author: Victor Holanda
easyblock = 'MakeCp'

name = 'Amber'
version = '20-3-0'

homepage = 'http://ambermd.org/'
description = """Amber (Assisted Model Building with Energy Refinement)
is software for performing molecular dynamics and structure prediction"""

toolchain = {'name': 'cpeGNU', 'version': '20.10'}
toolchainopts = {'verbose': False}

sources = [
    '/apps/common/UES/easybuild/sources/a/%(name)s/Amber20.tar.bz2',
    '/apps/common/UES/easybuild/sources/a/%(name)s/AmberTools20.tar.bz2',
]

builddependencies = [
    ('cray-hdf5', EXTERNAL_MODULE),
    ('cray-netcdf', EXTERNAL_MODULE),
]
dependencies = [
    ('bzip2', '1.0.6'),
    ('zlib', '1.2.11'),
]

prebuildopts = """
    cd .. && 
    mv amber20_src/* . && 
    export AMBERHOME=%(builddir)s && 
    ./update_amber --update-to AmberTools/3 && 
    ./update_amber --update-to %(name)s/0 && 
    FCFLAGS="-fallow-argument-mismatch" FFLAGS=$FCFLAGS ./configure -crayxt5 -noX11 --skip-python --with-netcdf $EBROOTNETCDF gnu <<< N && 
    echo 'PMEMD_CU_INCLUDES += -I$(MPICH_DIR)/include' >> config.h &&
    make install &&
    make distclean &&
    FCFLAGS="-fallow-argument-mismatch" FFLAGS=$FCFLAGS ./configure -crayxt5 -noX11 -openmp --skip-python --with-netcdf $EBROOTNETCDF gnu <<< N && 
    echo 'PMEMD_CU_INCLUDES += -I$(MPICH_DIR)/include' >> config.h && 
    make install && 
    make distclean &&
    FCFLAGS="-fallow-argument-mismatch" FFLAGS=$FCFLAGS ./configure -crayxt5 -mpi -noX11 -openmp --skip-python --with-netcdf $EBROOTNETCDF gnu <<< N && 
    echo 'PMEMD_CU_INCLUDES += -I$(MPICH_DIR)/include' >> config.h && 
    make install && 
    make distclean &&
    FCFLAGS="-fallow-argument-mismatch" FFLAGS=$FCFLAGS ./configure -crayxt5 -mpi -noX11 --skip-python --with-netcdf $EBROOTNETCDF gnu <<< N && 
    echo 'PMEMD_CU_INCLUDES += -I$(MPICH_DIR)/include' >> config.h && 
    make install && 
"""
buildopts = 'install'

whatis = [
    "%(name)s 20 && AmberTools 20",
    "AmberTools patch level 3",
    "%(name)s without any patches",
]
files_to_copy = []
buildininstalldir = True

sanity_check_paths = {
    'files': ['bin/pmemd.MPI', 'bin/pmemd'],
    'dirs': [],
}

modextravars = {'AMBERHOME': '%(builddir)s'}

moduleclass = 'bio'
