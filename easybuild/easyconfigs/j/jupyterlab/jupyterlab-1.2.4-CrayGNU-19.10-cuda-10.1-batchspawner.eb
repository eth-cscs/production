# @author: robinson (omlins and hvictor for IJulia)

easyblock = 'PythonBundle'

name = 'jupyterlab'
version = '1.2.4'
_cudaversion = '10.1'
versionsuffix = '-cuda-%s-batchspawner' % _cudaversion
_pyminver = '6'

_jl_maj_ver = '1'
_jl_min_ver = '2'
_jl_rev_ver = '0'

_jlver = '%s.%s.%s' % (_jl_maj_ver, _jl_min_ver, _jl_rev_ver)
_jlshortver = '%s.%s' % (_jl_maj_ver, _jl_min_ver)

homepage = 'https://github.com/jupyterlab/jupyterlab'
description = "An extensible environment for interactive and reproducible computing, based on the Jupyter Notebook and Architecture."

toolchain = {'name': 'CrayGNU', 'version': '19.10'}
toolchainopts = {'pic': True, 'verbose': False}

dependencies = [
    ('cray-python/3.6.5.7', EXTERNAL_MODULE),
    ('libffi', '3.2.1', '', True),
    ('PyExtensions', '%(pyver)s'),
    ('IPython', '7.7.0', '-python%(pymajver)s'),
    ('JuliaExtensions', _jlver, '-cuda-%s' % _cudaversion),
    ('configurable-http-proxy', '3.1.1'),
    ('dask', '2.2.0', '-python%(pymajver)s'),
    ('graphviz', '2.40.1', '', True),
]

exts_default_options = {
    'req_py_majver': '%(pymajver)s',
    'req_py_minver': '%s' % _pyminver,
    'source_urls': [PYPI_SOURCE]
}

exts_list = [

#jupyterlab packages besides ipython and its deps
    ('pyrsistent', '0.15.4', {
        'use_pip': True,
        }),
    ('attrs', '19.1.0', {
        'use_pip': True,
        'modulename': 'attr',
        }),
    ('jsonschema', '3.0.1', {
        'use_pip': True,
        }),
    ('json5', '0.8.5', {
        'use_pip': True,
        }),
    ('Send2Trash', '1.5.0', {
        'use_pip': True,
        }),
    ('tornado', '6.0.3', {
        'use_pip': True,
        }),
    ('pyzmq', '18.0.2', {
        'use_pip': True,
        'modulename': 'zmq',
        }),
    ('python-dateutil', '2.8.0', {
        'use_pip': True,
        'modulename':  'dateutil',
        }),
    ('jupyter_core', '4.5.0', {
        'use_pip': True,
        }),
    ('jupyter_client', '5.3.1', {
        'use_pip': True,
        }),
    ('MarkupSafe', '1.1.1', {
        'use_pip': True,
        }),
    ('Jinja2', '2.10.1', {
        'use_pip': True,
        }),
    ('webencodings', '0.5.1', {
        'use_pip': True,
        }),
    ('bleach', '3.1.0', {
        'use_pip': True,
        }),
    ('defusedxml', '0.6.0', {
        'use_pip': True,
        }),
    ('entrypoints', '0.3', {
        'use_pip': True,
        }),
    ('mistune', '0.8.4', {
        'use_pip': True,
        }),
    ('nbformat', '4.4.0', {
        'use_pip': True,
        }),
    ('pandocfilters', '1.4.2', {
        'use_pip': True,
        }),
    ('testpath', '0.4.2', {
        'use_pip': True,
        }),
    ('nbconvert', '5.5.0', {
        'use_pip': True,
        }),
    ('prometheus_client', '0.7.1', {
        'use_pip': True,
        }),
    ('terminado', '0.8.2', {
        'use_pip': True,
        }),
    ('jupyterlab_server', '1.0.0', {
        'use_pip': True,
        }),
    ('ipykernel', '5.1.1', {
        'use_pip': True,
        }),
    ('notebook', '6.0.0', {
        'use_pip': True,
        }),
    (name, version, {
        'use_pip': True,
        'installopts': ' --install-option=--skip-npm ',
        }),

# jupyterhub and its deps
    ('SQLAlchemy', '1.3.6', {
        'use_pip': True,
        }),
    ('Mako', '1.0.14', {
        'use_pip': True,
        }),
    ('alembic', '1.0.11', {
        'use_pip': True,
        }),
    ('python-editor', '1.0.4', {
        'use_pip': True,
        'modulename': 'editor',
        }),
    ('async_generator', '1.10', {
        'use_pip': True,
        }),
    ('pycparser', '2.19', {
        'use_pip': True,
        }),
    ('cffi', '1.12.3', {
        'use_pip': False,
        }),
    ('asn1crypto', '0.24.0', {
        'use_pip': True,
        }),
    ('cryptography', '2.7', {
        'use_pip': True,
        }),
    ('pyOpenSSL', '19.0.0', {
        'use_pip': True,
        'modulename': "OpenSSL",
        }),
    ('certipy', '0.1.3', {
        'use_pip': True,
        }),
    ('entrypoints', '0.3', {
        'use_pip': True,
        }),
    ('oauthlib', '3.0.2', {
        'use_pip': True,
        }),
    ('pamela', '1.0.0', {
        'use_pip': True,
        }),
    ('urllib3', '1.25.3', {
        'use_pip': True,
        }),
    ('idna', '2.8', {
        'use_pip': True,
        }),
    ('chardet', '3.0.4', {
        'use_pip': True,
        }),
    ('certifi', '2019.6.16', {
        'use_pip': True,
        }),
    ('requests', '2.22.0', {
        'use_pip': True,
        }),
    ('jupyterhub', '1.0.0', {
        'use_pip': True,
        }),

# widgets: note the lab extensions below
    ('widgetsnbextension', '3.5.1'),
    ('ipywidgets', '7.5.1'),
# ipympl matplotlib widgets, requires lab extension
    ('ipympl', '0.3.3'),

# itkwidgets
    ('param', '1.9.2'),
    ('pyct', '0.4.6'),
    ('colorcet', '2.0.2'),
    ('zstandard', '0.13.0'),
    ('itk-core', '5.0.1', {
        'use_pip': True,
        'source_tmpl': 'itk_core-%(version)s-cp36-cp36m-manylinux1_x86_64.whl',
        'unpack_sources': False,
        'modulename': 'itk',
        }),
    ('itk-numerics', '5.0.1', {
        'use_pip': True,
        'source_tmpl': 'itk_numerics-%(version)s-cp36-cp36m-manylinux1_x86_64.whl',
        'unpack_sources': False,
        'modulename': 'itk'
        }),
    ('itk-filtering', '5.0.1', {
        'use_pip': True,
        'source_tmpl': 'itk_filtering-%(version)s-cp36-cp36m-manylinux1_x86_64.whl',
        'unpack_sources': False,
        'modulename': 'itk'
        }),
    ('itk-meshtopolydata', '0.5.1', {
        'use_pip': True,
        'source_tmpl': 'itk_meshtopolydata-%(version)s-cp36-cp36m-manylinux1_x86_64.whl',
        'unpack_sources': False,
        'modulename': 'itk'
        }),
    ('ipydatawidgets', '4.0.1', {
        'use_pip': True,
        }),
    ('traittypes', '0.2.1'),
    ('itkwidgets', '0.25.0'),


# plotly, requires the lab extension below
    ('retrying', '1.3.3'),
    ('plotly', '4.0.0'),

# bokeh, requires the labextension below
    ('PyYAML', '5.1.2', {
        'modulename': 'yaml',
        }),
    ('bokeh', '1.3.4'),
    ('packaging', '19.1'),
    ('Pillow', '6.1.0', {
        'modulename': 'PIL',
        }),

# bqplot: requires the labextension below
    ('bqplot', '0.11.6'),

# nbresuse for jupyterlab-system-monitor extension
    ('psutil', '5.6.3'),
    ('nbresuse', '0.3.2'),

# jupyterlab-slrum extension to implement common slurm commands in the notebook, not yet supported with JLab 1.x
#    ('jupyterlab_slurm', '0.1.1'),

# qgrid widgets: note that 1.1.1 is not yet supported with JupyterLab 1.x - commented for now, twr
#    ('qgrid', '1.1.1'),

# graphviz, for dask graph visualization
     ('graphviz', '0.12', {
        'use_pip': True,
        'source_tmpl': 'graphviz-%(version)s.zip',
        }),

# dask-labextension
# This package provides a JupyterLab extension to manage Dask clusters,
# as well as embed Dask's dashboard plots directly into JupyterLab panes
    ('simpervisor', '0.3', {
        'use_pip': True,
        }),
    ('multidict', '4.5.2', {
        'use_pip': True,
        }),
    ('yarl', '1.3.0', {
        'use_pip': True,
        }),
    ('typing_extensions', '3.7.4', {
        'use_pip': True,
        }),
    ('async-timeout', '3.0.1', {
        'use_pip': True,
        }),
    ('idna-ssl', '1.1.0', {
        'use_pip': True,
        'modulename': 'idna_ssl',
        }),
   ('aiohttp', '3.5.4', {
        'use_pip': True,
        }),
   ('jupyter-server-proxy', '1.1.0', {
        'use_pip': True,
        }),
    ('dask_labextension', '1.0.3', {
        'use_pip': True,
        }),

# jupyterlab-nvdashboard, twr
# A JupyterLab extension for displaying dashboards of GPU usage. From RAPIDS.
   ('pynvml', '8.0.4', {
        'use_pip': True,
        }),
    ('jupyterlab-nvdashboard', '0.1.11', {
        'use_pip': True,
        }),


# kernels
# bash kernel, requires kernel install below, twr
    ('bash_kernel', '0.7.2', {
        'use_pip': True,
        }),
     ('batchspawner', '68a1fcd', {
        'use_pip': True,
        }),
]

# For Julia packages needed for Jupyter
_ijulia_depot = "%(installdir)s/share/IJulia"
_ijulia_projectdir = "%s/environments/$EBJULIA_ENV_NAME" % _ijulia_depot
_ijulia_projectdir_tcl = "%s/environments/$::env(EBJULIA_ENV_NAME)" % _ijulia_depot

modextrapaths = {
    'PYTHONPATH': ['lib/python%(pyshortver)s/site-packages'],
    'JUPYTER_PATH': 'share/jupyter',
}

modextravars = {
    'JUPYTERLAB_DIR': "%(installdir)s/share/jupyter/lab/",
    'JUPYTER' : '%(installdir)s/bin/jupyter',
}

modtclfooter = """
prepend-path JULIA_DEPOT_PATH "%s"
prepend-path EBJULIA_ADMIN_DEPOT_PATH "%s"
prepend-path JULIA_LOAD_PATH "%s"
prepend-path EBJULIA_ADMIN_LOAD_PATH "%s"
""" % (_ijulia_depot, _ijulia_depot, _ijulia_projectdir_tcl, _ijulia_projectdir_tcl)


# install extensions and batchspawner components

postinstallcmds = [
"""
export YARN_CACHE_FOLDER=/tmp/$USER/yarn_cache;
export JUPYTERLAB_DIR=%%(installdir)s/share/jupyter/lab/;
export PYTHONPATH=%%(installdir)s/lib/python3.6/site-packages:$PYTHONPATH;
#export JUPYTER_PATH=%%(installdir)s/share/jupyter/;
export JUPYTER_DATA_DIR=%%(installdir)s/share/jupyter/;
export JULIA_DEPOT_PATH=%%(installdir)s/share/julia/site/;
export JUPYTER=%%(installdir)s/bin/jupyter;  # Needed for IJulia (and maybe others)
%%(installdir)s/bin/jupyter-labextension install -y @jupyter-widgets/jupyterlab-manager@1.0 --no-build;
%%(installdir)s/bin/jupyter labextension install jupyter-matplotlib --no-build
%%(installdir)s/bin/jupyter labextension install -y plotlywidget@1.0.0 --no-build;
%%(installdir)s/bin/jupyter labextension install jupyterlab-datawidgets itkwidgets --no-build;
%%(installdir)s/bin/jupyter labextension install -y jupyterlab-plotly@1.0.0 --no-build;
#%%(installdir)s/bin/jupyter labextension install -y jupyterlab-chart-editor@1.2 --no-build;
%%(installdir)s/bin/jupyter labextension install -y jupyterlab_bokeh@1.0.0 --no-build;%%(installdir)s/bin/jupyter labextension install -y bqplot@0.4.6 --no-build;
%%(installdir)s/bin/jupyter labextension install jupyterlab-topbar-extension jupyterlab-system-monitor --no-build;
%%(installdir)s/bin/jupyter labextension install dask-labextension --no-build;
%%(installdir)s/bin/jupyter labextension install jupyterlab-nvdashboard --no-build;
#                  "%%(installdir)s/bin/jupyter labextension install jupyterlab-server-proxy;" #not ready for JLab 1.x
#                  "%%(installdir)s/bin/jupyter labextension install -y jupyterlab-slurm --no-build;" #not ready for JLab 1.x, twr
#                  "%%(installdir)s/bin/jupyter labextension install -y qgrid@1.1.1 --no-build;" #qgrid not yet working in JLab 1.x, twr
%%(installdir)s/bin/jupyter lab build --dev-build=False;
rm -r $YARN_CACHE_FOLDER;
# Bash kernel - https://github.com/takluyver/bash_kernel
python3 -m bash_kernel.install --prefix=%%(installdir)s/;
# new batchspawner requires compute side components, TWR 121219
#git clone https://github.com/jupyterhub/batchspawner.git %%(builddir)s/batchspawner &&
#cd %%(builddir)s/batchspawner &&
#git checkout 68a1fcd3524f8990ba465fae4226da34f1e926b7 &&
#pip install . --prefix=%%(installdir)s
# IJulia kernel - https://github.com/JuliaLang/IJulia.jl
# installs ijulia in JULIA_DEPOT_PATH and kernel in $JUPYTER_DATA_DIR/kernels
unset EBJULIA_USER_DEPOT_PATH;
export EBJULIA_ADMIN_DEPOT_PATH=%s;
export JULIA_DEPOT_PATH=%s;
export JULIA_PROJECT=%s;
julia -e 'using Pkg; Pkg.add(\"IJulia\");';
chmod -R +rX %s; # Adjust permissions of IJulia files
file=%%(installdir)s/share/jupyter/kernels/julia-%s/kernel.json; cp $file ${file}.orig; cat $file.orig | perl -pe 's/"--project=.*",//g' > $file # Remove IJulia specific project configuration
""" % (_ijulia_depot, _ijulia_depot, _ijulia_projectdir, _ijulia_depot, _jlshortver)
]

sanity_check_paths = {
    'files': [],
    'dirs': ['lib/python%(pyshortver)s/site-packages',
             'share/jupyter/lab/extensions',
             'share/jupyter/lab/schemas',
             'share/jupyter/lab/staging',
             'share/jupyter/lab/static',
             'share/jupyter/lab/themes',
             ]
}


moduleclass = 'tools'
