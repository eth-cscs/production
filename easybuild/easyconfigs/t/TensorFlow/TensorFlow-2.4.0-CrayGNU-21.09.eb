# @author: sarafael, mschoengens, victorusu, gppezzi
easyblock = 'CmdCp'

name = 'TensorFlow'
version = '2.4.0'

homepage = 'https://www.tensorflow.org/'
description = "An open-source software library for Machine Intelligence."

toolchain = {'name': 'CrayGNU', 'version': '21.09'}

source_urls = ['https://github.com/%(namelower)s/%(namelower)s/archive/']
sources = ['v%(version)s.tar.gz']
patches = [
    '%(namelower)s-v%(version)s-cscs.patch',
    ('configure-cscs-v%(version)s.sh', '%(builddir)s/%(namelower)s-%(version)s/'),
]

builddependencies = [
    ('Bazel', '3.1.0'),
]
dependencies = [
    ('cray-python', EXTERNAL_MODULE),
    ('cudatoolkit', EXTERNAL_MODULE),
    ('cuDNN', '8.0.5', '', True),
    ('SWIG', '3.0.12', '-python%(pymajver)s'),
    ('dask', '2022.2.0', '-python%(pymajver)s'),
    ('prereq', 'tf-2.4'),
]

cmds_map = [
    ('v%(version)s.tar.gz', "export TEST_TMPDIR=%(builddir)s/../../../bazelout/ && chmod -R ug+rw $TEST_TMPDIR;\nrm -rf $TEST_TMPDIR && \nsed -i s\\@'$GCC_PATH'@$GCC_PATH@g third_party/gpus/crosstool/clang/bin/crosstool_wrapper_driver_is_not_gcc.tpl && \nsed -i s\\@'$CRAY_CUDATOOLKIT_DIR'@$CRAY_CUDATOOLKIT_DIR@g third_party/gpus/crosstool/clang/bin/crosstool_wrapper_driver_is_not_gcc.tpl &&\nsed -i s\\@'3.5,6.0'@6.0@g third_party/gpus/crosstool/clang/bin/crosstool_wrapper_driver_is_not_gcc.tpl && \nexport PYVER=%(pyver)s && \nexport PYSHORTVER=%(pyshortver)s && \nexport CUDATOOLKITVER=%(cudashortver)s && \nbash configure-cscs-v%(version)s.sh && \nbazel build --verbose_failures --distinct_host_configuration=false --action_env=PYTHONPATH=$PYTHONPATH             --config=v2 --config=cuda --copt=-mavx --copt=-mavx2 --copt=-mfma --copt=-msse4.2 --copt=-msse4.1            -c opt //%(namelower)s/tools/pip_package:build_pip_package //%(namelower)s:libtensorflow_cc.so && \nbazel-bin/%(namelower)s/tools/pip_package/build_pip_package %(builddir)s && \npip%(pymajver)s install --no-deps --prefix  %(builddir)s                 %(builddir)s/%(namelower)s-%(version)s-cp%(pymajver)s%(pyminver)s-cp%(pymajver)s%(pyminver)s-linux_x86_64.whl"),
]
postinstallcmds = [
    "chmod -R ug+rw %(builddir)s/../../../bazelout/",
    "chmod u+rwx -R %(installdir)s/k8-opt/bin/%(namelower)s/lite/python/schema_py_srcs_no_include_all/tflite/",
    "rm -rf %(builddir)s/../../../bazelout/",
]
files_to_copy = [
    (['%(builddir)s/%(namelower)s-%(version)s-cp%(pymajver)s%(pyminver)s-cp%(pymajver)s%(pyminver)s-linux_x86_64.whl'], '%(installdir)s'),
    (['%(builddir)s/bin'], '%(installdir)s'),
    (['%(builddir)s/lib'], '%(installdir)s'),
    (['%(builddir)s/../../../bazelout/*/*/execroot/org_tensorflow/bazel-out/k8-opt'], '%(installdir)s'),
]
exts_defaultclass = 'PythonPackage'

exts_default_options = {
    'req_py_majver': '%(pymajver)s',
    'req_py_minver': '%(pyminver)s',
    'source_urls': ['https://pypi.python.org/packages/source/%(nameletter)s/%(name)s'],
}

exts_list = [
    ('tensorflow-estimator', '2.4.0', {'use_pip': True, 'source_tmpl': 'tensorflow_estimator-%(version)s-py2.py3-none-any.whl', 'unpack_sources': False, 'modulename': 'tensorflow_estimator'}),
]

sanity_check_paths = {
    'files': ['%(namelower)s-%(version)s-cp%(pymajver)s%(pyminver)s-cp%(pymajver)s%(pyminver)s-linux_x86_64.whl'],
    'dirs': ['lib/python%(pyshortver)s/site-packages'],
}

modextrapaths = {'PYTHONPATH': 'lib/python%(pyshortver)s/site-packages'}

modextravars = {'TENSORBOARD_PROXY_URL': 'https://$::env(USER).jupyter.cscs.ch/hub/user-redirect/proxy/%PORT%/',
                'LD_LIBRARY_PATH':'/opt/nvidia/hpc_sdk/Linux_x86_64/2021/comm_libs/nccl/lib:$::env(LD_LIBRARY_PATH)'}

moduleclass = 'devel'
