# @author: sarafael, mschoengens, victorusu, gppezzi

easyblock = "CmdCp"

name = 'TensorFlow'
version = '2.0.0-beta1'
shortversion = '2.0.0b1'

py_maj_ver = '3'
py_min_ver = '6'
py_rev_ver = '5.1'
pyver = '%s.%s.%s' % (py_maj_ver, py_min_ver, py_rev_ver)
pyshortver = '%s.%s' % (py_maj_ver, py_min_ver)

cudaversion = '9.2'

ver_suffix_cuda = '-cuda-%s' % (cudaversion)
ver_suffix_py = '-python%s' % (py_maj_ver)
versionsuffix = '%s%s' % (ver_suffix_cuda, ver_suffix_py)

installdir = '%(installdir)s'
builddir = '%(builddir)s'

homepage = 'https://www.tensorflow.org/'
description = """An open-source software library for Machine Intelligence."""

toolchain = {'name': 'CrayGNU', 'version': '18.08'}

builddependencies = [
    ('Bazel', '0.24.1', ver_suffix_py),
    ('wheel', '0.31.1', ver_suffix_py),
]

dependencies = [
    ('cuDNN', '7.6.0', '-cuda-%s' % cudaversion, True),
    ('SWIG', '3.0.12', ver_suffix_py),
    ('NCCL', '2.4.7', '-cuda-%s' % cudaversion, True),
    ('protobuf', '3.6.0', ver_suffix_py),
    ('dask', '1.0.0', '-python%s' % py_maj_ver),
    ('PyExtensionsDS', pyver),
]

sources = ['v%(version)s.tar.gz']
source_urls = ['https://github.com/tensorflow/tensorflow/archive/']

patches = [('tensorflow-v%s-cuda%s-cscs.patch' % (version, cudaversion)),
           ('configure-cscs-v%s.sh' % version, '%s/tensorflow-%s/' % (builddir, version))]

with_configure = False

whl_file = 'tensorflow-%s-cp%s%s-cp%s%sm-linux_x86_64.whl' % (shortversion, py_maj_ver, py_min_ver, py_maj_ver, py_min_ver)

build_str  = "export TEST_TMPDIR=%s/../../../bazelout/" % builddir
build_str += " && rm -rf $TEST_TMPDIR"
build_str += " && sed -i s\@'$GCC_PATH'@$GCC_PATH@g third_party/gpus/crosstool/clang/bin/crosstool_wrapper_driver_is_not_gcc.tpl" # this line in required for the patch to work
build_str += " && sed -i s\@'$CRAY_CUDATOOLKIT_DIR'@$CRAY_CUDATOOLKIT_DIR@g third_party/gpus/crosstool/clang/bin/crosstool_wrapper_driver_is_not_gcc.tpl" # this line in required for the patch to work
build_str += " && export PYMAJVER=%s && export PYMINVER=%s && export PYREVVER=%s" % (py_maj_ver, py_min_ver, py_rev_ver)   # required for configure-cscs scripts
build_str += " && bash configure-cscs-v%s.sh" % version
build_str += " && bazel build --verbose_failures --distinct_host_configuration=false --action_env=PYTHONPATH=$PYTHONPATH"
build_str += "    --config=v2 --config=cuda --copt=-mavx --copt=-mavx2 --copt=-mfma --copt=-msse4.2 --copt=-msse4.1 --cxxopt='-D_GLIBCXX_USE_CXX11_ABI=0'"
build_str += "    -c opt //tensorflow/tools/pip_package:build_pip_package"
build_str += " && bazel-bin/tensorflow/tools/pip_package/build_pip_package %(builddir)s"
build_str += " && pip%s install --no-deps --prefix  %s %s/" % (py_maj_ver, builddir, builddir) + whl_file
build_str += " && rm -rf $TEST_TMPDIR"

cmds_map = [
    ('v%(version)s.tar.gz', build_str),
]

files_to_copy = [
    (['%(builddir)s/' + whl_file], '%(installdir)s'),
    (['%(builddir)s/bin'], '%(installdir)s'),
    (['%(builddir)s/lib'], '%(installdir)s'),
]

exts_defaultclass = 'PythonPackage'

exts_list = [
    ('wrapt', '1.11.2', {
            'req_py_majver': '3',
            'req_py_minver': '6',
            'source_urls': ['https://pypi.python.org/packages/source/w/wrapt/'],
    }),
    ('setuptools', '41.0.1', {
        'req_py_majver': '3',
        'req_py_minver': '6',
        'source_urls': ['https://pypi.python.org/packages/source/s/setuptools'],
        'source_tmpl': 'setuptools-41.0.1.zip',
    }),
    ('Markdown', '3.1.1', {
        'req_py_majver': '3',
        'req_py_minver': '6',
        'source_urls': ['https://pypi.python.org/packages/source/m/markdown'],
    }),
    ('wheel', '0.33.4', {
        'req_py_majver': '3',
        'req_py_minver': '6',
        'source_urls': ['https://pypi.python.org/packages/source/w/wheel'],
    }),
    ('tensorflow-estimator', '1.14.0', {
        'req_py_majver': '3',
        'req_py_minver': '6',
        'source_urls': ['https://pypi.python.org/packages/source/t/tensorflow_estimator'],
        'source_tmpl': 'tensorflow_estimator-%(version)s-py2.py3-none-any.whl',
        'modulename': 'tensorflow_estimator',
        'unpack_sources': False,
        'use_pip' : True,
    }),
    ('grpcio', '1.22.0', {
        'req_py_majver': '3',
        'req_py_minver': '6',
        'source_urls': ['https://pypi.python.org/packages/source/g/grpcio'],
        'modulename': 'grpc',
    }),
    ('tensorboard', '1.14.0', {
        'req_py_majver': '3',
        'req_py_minver': '6',
        'source_urls': ['https://pypi.python.org/packages/source/t/tensorboard'],
        'source_tmpl': 'tensorboard-1.14.0-py3-none-any.whl',
        'unpack_sources': False,
        'use_pip' : True,
    }),
]

sanity_check_paths = {
    'files': [whl_file],
    'dirs': ['%s/lib/python%s.%s/site-packages' % (installdir, py_maj_ver, py_min_ver)],
}

modextrapaths = {
    'PYTHONPATH': 'lib/python%s.%s/site-packages' % (py_maj_ver, py_min_ver),
}

moduleclass = 'devel'
