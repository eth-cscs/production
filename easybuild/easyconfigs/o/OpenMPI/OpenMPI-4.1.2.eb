# contributed by Luca Marsella (CSCS)
easyblock = 'ConfigureMake'

name = 'OpenMPI'
version = '4.1.2'

homepage = 'http://www.open-mpi.org/'
description = """The Open MPI Project is an open source MPI-3 implementation."""

toolchain = SYSTEM

source_urls = ['http://www.open-mpi.org/software/ompi/v%(version_major_minor)s/downloads']
sources = [SOURCELOWER_TAR_GZ]

builddependencies = [
    ('cudatoolkit/11.2.0_3.39-2.1__gf93aa1c', EXTERNAL_MODULE),
    ('pmi', EXTERNAL_MODULE),
    ('pmi-lib', EXTERNAL_MODULE),
    ('ugni', EXTERNAL_MODULE)
]

dependencies = [
    ('gcc/9.3.0', EXTERNAL_MODULE)
]

configopts = ' --enable-mpi-cxx --enable-shared --with-cuda=${EBROOTCUDA} --with-hwloc=internal '
configopts += ' --with-cray-pmi=${EBROOTPMI} --with-pmi-libdir --with-ugni '
configopts += ' CRAY_PMI_CFLAGS=${CRAY_PMI_INCLUDE_OPTS} CRAY_PMI_LIBS=${CRAY_PMI_POST_LINK_OPTS} ' 

local_libs = ["mpi_mpifh", "mpi", "ompitrace", "open-pal", "open-rte"]
sanity_check_paths = {
    'files': ["bin/%s" % binfile for binfile in ["ompi_info", "opal_wrapper", "orterun"]] +
             ["lib/lib%s.%s" % (libfile, SHLIB_EXT) for libfile in local_libs] +
             ["include/%s.h" % x for x in ["mpi-ext", "mpif-config", "mpif", "mpi", "mpi_portable_platform"]],
    'dirs': [],
}

moduleclass = 'mpi'
