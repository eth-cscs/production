# @author: sarafael, gppezzi

easyblock = 'Bundle'

name = 'ipykernel'

local_py_maj_ver = '2'
local_py_min_ver = '7'
local_py_rev_ver = '15.7'

local_pyver = '%s.%s.%s' % (local_py_maj_ver, local_py_min_ver, local_py_rev_ver)
local_pyshortver = '%s.%s' % (local_py_maj_ver, local_py_min_ver)

version = '4.8.2'

versionsuffix = '-python%s' % local_py_maj_ver

homepage = 'https://pypi.python.org/pypi'
description = """
    This module is a bundle of Python packages on Cray systems based on the
    module cray-python
"""

toolchain = {'name': 'CrayGNU', 'version': '19.10'}
toolchainopts = {'pic': True, 'verbose': False}

dependencies = [
    ('PyExtensions', '%s' % local_pyver),
    ('IPython', '5.7.0', '-python2')
]

# bundle of Python packages
exts_defaultclass = 'PythonPackage'


exts_list = [
    ('tornado', '5.0.2', {
            'req_py_majver': '2',
            'req_py_minver': '7',
            'source_urls': [
                'https://pypi.python.org/packages/source/t/tornado/'
            ],
        }),
    ('pyzmq', '17.0.0', {
            'req_py_majver': '2',
            'req_py_minver': '7',
            'modulename': 'zmq',
            'source_urls': [
                'https://pypi.python.org/packages/source/p/pyzmq/'
            ],
        }),
    ('jupyter_core', '4.4.0', {
            'req_py_majver': '2',
            'req_py_minver': '7',
            'source_urls': [
                'https://pypi.python.org/packages/source/j/jupyter-core/'
            ],
        }),
    ('jupyter_client', '5.2.3', {
            'req_py_majver': '2',
            'req_py_minver': '7',
            'use_pip': True,
            'source_urls': [
                'https://pypi.python.org/packages/source/j/jupyter-client/'
            ],
        }),
    ('ipykernel', '4.8.2', {
            'req_py_majver': '2',
            'req_py_minver': '7',
            'source_urls': [
                'https://pypi.python.org/packages/source/i/ipykernel/'
            ],
        }),
]

# specify that Bundle easyblock should run a full sanity check, rather than
# just trying to load the module
local_full_sanity_check = True

modextrapaths = {'PYTHONPATH': ['lib/python%s/site-packages' % local_pyshortver]}

sanity_check_paths = {
    'files': [],
    'dirs': ['lib/python%s/site-packages' % local_pyshortver]
}

moduleclass = 'tools'
