# contributed by Jean Favre (CSCS)
#
easyblock = 'CMakeMake'

name = 'Visit'
version = "2.12.3"

homepage = 'https://wci.llnl.gov/codes/visit/'
description = """VisIt is an Open Source, interactive, scalable, visualization,
animation and analysis tool."""

toolchain = {'name': 'CrayGNU', 'version': '17.08'}
toolchainopts = {'usempi': True, 'verbose': False}

#
# Visit downloads all its dependencies by itself during the configuration.
# The downloads may fail due to different reasons. So, we have pre-packaged
# visit with the downloaded dependencies.
#
# Below you will find the steps to create the SOURCELOWER_TAR_GZ file used in
# this recipe.
#
# wget http://portal.nersc.gov/project/visit/releases/2.12.3/visit2.12.3.tar.gz
# tar xfz visit2.12.3.tar.gz
# cd visit2.12.3
# ./src/svn_bin/build_visit --console --no-visit --system-cmake --boost  \
#                           --h5part --no-pyside --system-python --vtk \
#                           --mesa --parallel --hdf5 --silo --szip \
#                           --makeflags -j20 --netcdf --qt --download-only
# cd ..
# rm -rf visit2.12.3.tar.gz
# tar cfz visit-2.12.3.tar.gz visit2.12.3
# mkdir -p $EASYBUILD_SOURCEPATH/v/Visit
# cp visit-2.12.3.tar.gz $EASYBUILD_SOURCEPATH/v/Visit/
#
# NOTES:
# * The new visit package is named visit-2.12.3.tar.gz, not visit2.12.3.tar.gz
#   as the original file.
# * The download-only option must not be included in the actual build.
# * The configuration options are the same as the ones below. Except for the
#   boost and download-only options. In our case, boost is already provided by
#   a module. So, we can choose to use the module or have visit build it.
#   Here, we are using the module.
# * We are using the system-python because one cannot compile python with xalt
#   enabled.
# * In the preconfigopts commands below, there is an additional <<< "yes".
#   This is used to accept the Qt License. This is not needed when using
#   --download-only
#

# In order to use the original version uncomment these lines
#source_urls = ['http://portal.nersc.gov/project/visit/releases/%(version)s' ]
#sources = ['visit2.12.3.tar.gz']

# In order to use the pre-downloaded version use the source below
sources = ['/apps/common/UES/easybuild/sources/%(nameletterlower)s/%(name)s/' + SOURCELOWER_TAR_GZ]

srcdir='../src'
preconfigopts  = ' export PAR_COMPILER=$CC; '
preconfigopts += ' export PAR_INCLUDE="-I$MPICH_DIR/include"; '
preconfigopts += ' ./src/svn_bin/build_visit --console --no-visit '
preconfigopts += ' --system-cmake --h5part --no-pyside --system-python '
preconfigopts += ' --vtk --mesa --parallel --hdf5 --silo --szip --makeflags -j20 '
#preconfigopts += ' --alt-boost-dir $EBROOTBOOST '
#preconfigopts += ' --xdmf '
preconfigopts += ' --netcdf --qt <<< "yes" && '
preconfigopts += ' sed -i /VISIT_MPI_COMPILER/d `hostname`.cmake; '
preconfigopts += ' cp `hostname`.cmake ../visit%(version)s/src/config-site; '
preconfigopts += ' mkdir build; '
preconfigopts += ' cd build; '

configopts  = ' -DCMAKE_BUILD_TYPE=RelWithDebInfo '
configopts += ' -DVISIT_DATA_MANUAL_EXAMPLES=ON '
configopts += ' -DVISIT_INSTALL_THIRD_PARTY=ON '
configopts += ' -DVISIT_MPI_LIBS="mpich;pmi" '
configopts += ' -DMPI_CXX_COMPILER=$CXX '
configopts += ' -DMPI_C_COMPILER=$CC '
configopts += ' -DVISIT_PARALLEL_CXXFLAGS="-DPARALLEL -DMPICH_IGNORE_CXX_SEEK '
configopts += ' -I${CRAY_MPICH_DIR}/include" '
configopts += ' -DVISIT_PARALLEL_LINKER_FLAGS="-L${CRAY_MPICH_DIR}/lib '
configopts += ' ${CRAY_PMI_POST_LINK_OPTS}"; '

prebuildopts  = ' cd build; '
buildopts = 'install'

#dependencies = [
#  ('cray-python/17.06.1', EXTERNAL_MODULE),
# ('Boost', '1.63.0', '-Python-2.7.13'), 
# ('libxml2', '2.9.4' ) 
#]

builddependencies = [('CMake', '3.9.1', '', True)]

# On dom the build sometimes fail when using too many parallel tasks. With 2, it takes about 1 hour, but it works fine
parallel = 4
skipsteps = ['install']

files_to_copy = []

runtest = False

sanity_check_paths = {
    'files': [],
    'dirs': ['current', 'bin', 'data', '%(version)s' ],
}

moduleclass = 'vis'
