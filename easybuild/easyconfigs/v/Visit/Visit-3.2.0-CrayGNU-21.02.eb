# contributed by Jean Favre
#
easyblock = 'CMakeMake'

name = 'Visit'
version = '3.2.0'

homepage = 'https://visit-dav.github.io/visit-website/'
description = """VisIt is an Open Source, interactive, scalable, visualization,
animation and analysis tool."""

toolchain = {'name': 'CrayGNU', 'version': '21.02'}
toolchainopts = {'usempi': True, 'verbose': False}

#
# Visit downloads all its dependencies by itself during the configuration.
# The downloads may fail due to different reasons. So, we have pre-packaged
# visit with the downloaded dependencies.
#
# Below you will find the steps to create the SOURCELOWER_TAR_GZ file used in
# this recipe.
#
# mkdir /run/user/1100/VisIt; cd /run/user/1100/VisIt
# wget  https://github.com/visit-dav/visit/releases/download/v3.2.0/visit3.2.0.tar.gz
# tar xf visit-3.2.0.tar.gz visit3.2.0
# cd visit3.2.0
# ./src/tools/dev/scripts/build_visit --console --no-visit --parallel \
# --llvm --mesagl --vtk --makeflags -j32 --system-python --alt-python-dir /usr \
# --openssl --qwt --qt --silo --hdf5 --cmake --icet --ospray --ispc --embree --tbb \
# --xdmf --download-only
# cd ..

# tar cfz  visit-3.2.0.tar.gz visit3.2.0
# mkdir -p $EASYBUILD_SOURCEPATH/v/Visit
# cp visit-3.2.0.tar.gz $EASYBUILD_SOURCEPATH/v/Visit/
#
# NOTES:
# * The new visit package is named visit-3.2.0.tar.gz, not visit3.2.0.tar.gz
# as the original file.
# * The download-only option must not be included in the actual build.
# * The configuration options are the same as the ones below.
# * We are using the system-python because one cannot compile python with xalt
# enabled.
# * In the preconfigopts commands below, there is an additional <<< "yes".
# This is used to accept the Qt License. This is not needed when using
# --download-only
# * The original intent was to compile only the server-side components, disabling the
# use of the GUI client for loggin nodes. Yet, this also removes the cli, preventing
# us to run python-based batch-mode scripts. Thus, we build all components [default]


# In order to use the pre-downloaded version use the source below
sources = ['/apps/common/UES/easybuild/sources/%(nameletterlower)s/%(name)s/%(namelower)s-%(version)s.tar.gz']

builddependencies = [
    ('CMake', '3.14.5', '', True),
]

preconfigopts  = ' export PAR_COMPILER=$CC; '
preconfigopts += ' export PAR_INCLUDE="-I$MPICH_DIR/include"; '
preconfigopts += ' pushd ../visit3.2.0; mkdir -p third_party/mesagl;ln -s mesagl third_party/mesa;  module swap gcc/9.3.0; '
preconfigopts += 'sed -i "s/{C_COMPILER/{PAR_COMPILER/g" src/tools/dev/scripts/bv_support/bv_icet.sh; '
preconfigopts += 'sed -i "s/DMPI_COMPILER/DMPI_C_COMPILER/g" src/tools/dev/scripts/bv_support/bv_icet.sh; '
preconfigopts += 'sed -i "0,/bin\/python/s//bin\/python3/" src/CMake/FindVisItPython.cmake; '
preconfigopts += 'sed -i "s/PYTHON_GLOB_RESULT 0/PYTHON_GLOB_RESULT 1/g" src/CMake/FindVisItPython.cmake; '
preconfigopts += './src/tools/dev/scripts/build_visit --console --no-visit --parallel --llvm --mesagl --vtk --makeflags -j32'
preconfigopts += ' --system-python --alt-python-dir /usr '
preconfigopts += ' --openssl --qwt --qt --silo --hdf5 --xdmf --system-cmake --icet --ospray --ispc --embree --tbb <<< "yes" && '
preconfigopts += ' sed -i "s/gcc TYPE/cc TYPE/g" `hostname`.cmake;  sed -i "s/g++/CC/g" `hostname`.cmake;  cp `hostname`.cmake ./src/config-site;  mkdir build; cd build; '

configopts = " -DMPI_C_COMPILER=cc -DMPI_CXX_COMPILER=CC -DCMAKE_CXX_COMPILER=CC -DCMAKE_BUILD_TYPE=RelWithDebInfo -DVISIT_ENABLE_MANUALS=FALSE -DVISIT_DATA_MANUAL_EXAMPLES:BOOL=ON  -DVISIT_INSTALL_THIRD_PARTY:BOOL=ON  -DVISIT_SLIVR:BOOL=OFF -DVISIT_ENABLE_XDB:BOOL=OFF "
configopts += " -DVISIT_ENABLE_LIBSIM:BOOL=OFF "

prebuildopts = " pushd ../visit3.2.0/build;  module swap gcc/9.3.0; "

preinstallopts = " pushd ../visit3.2.0/build; "

parallel = 24

srcdir = '../visit3.2.0/src'
install_cmd = "make install && cp %(builddir)s/visit3.2.0/third_party/mesagl/17.3.9/linux-x86_64_gcc-9.3/lib/libswrAVX* %(installdir)s/current/linux-%(arch)s/lib"
modtclfooter = """
if { [ is-loaded gcc ] } {
    module swap gcc/9.3.0
}
"""
#skipsteps = ['install']

runtest = False

sanity_check_paths = {
    'files': [],
    'dirs': ['data', 'bin', '%(version)s'],
}

moduleclass = 'vis'
