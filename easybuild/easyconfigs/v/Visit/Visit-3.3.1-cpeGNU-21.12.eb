# contributed by Jean Favre
#
easyblock = 'CMakeMake'

name = 'Visit'
version = '3.3.1'

homepage = 'https://visit-dav.github.io/visit-website/'
description = """VisIt is an Open Source, interactive, scalable, visualization,
animation and analysis tool."""

toolchain = {'name': 'cpeGNU', 'version': '21.12'}
toolchainopts = {'usempi': True, 'verbose': False}

# Visit downloads all its dependencies by itself during the configuration.
# The downloads may fail due to different reasons. So, we have pre-packaged
# visit with the downloaded dependencies.
#
# Below you will find the steps to create the SOURCELOWER_TAR_GZ file used in
# this recipe.
#
# mkdir /run/user/1100/VisIt; cd /run/user/1100/VisIt
# wget https://github.com/visit-dav/visit/archive/refs/tags/v3.3.1.tar.gz
# tar xf v3.3.1.tar.gz visit-3.3.1
# cd visit-3.3.1
# ./src/tools/dev/scripts/build_visit --console --no-visit --parallel \
# --llvm --mesagl --vtk --system-python  \
# --qwt --qt --silo --hdf5 --system-cmake --icet --ospray --ispc --embree --tbb \
# --xdmf --mfem --conduit --download-only
#
# tar cfz  visit-3.3.1.tar.gz visit-3.3.1
# mkdir -p /apps/common/UES/easybuild/sources/v/Visit
# cp visit-3.3.1.tar.gz /apps/common/UES/easybuild/sources/v/Visit/
#
# NOTES:
# * The new visit package is named visit-3.3.1.tar.gz, not visit3.3.1.tar.gz
# as the original file.
# * The download-only option should be removed in the actual build.
# * The configuration options are the same as the ones below.
# * We are using the system-python because one cannot compile python with xalt
# enabled.
# * In the preconfigopts commands below, there is an additional <<< "yes".
# This is used to accept the Qt License. This is not needed when using
# --download-only
# * The original intent was to compile only the server-side components, disabling the
# use of the GUI client for loggin nodes. Yet, this also removes the cli, preventing
# us to run python-based batch-mode scripts. Thus, we build all components [default]

# WARNING: local_download folder has restricted access, download manually if you don't have access
import os
local_apps=os.getenv("APPS")
local_system=os.getenv("LMOD_SYSTEM_NAME") or os.getenv("CLUSTER_NAME")
local_common_dir=local_apps.replace(local_system,'common')
local_download = local_common_dir + '/easybuild/sources/%(nameletterlower)s/%(name)s/'

# In order to use the pre-downloaded version use the source below
sources = [local_download + '%(namelower)s-%(version)s.tar.gz']

builddependencies = [
    ('CMake', '3.22.1', '', True)
]

preconfigopts =  'export PAR_COMPILER=cc; '
preconfigopts += 'export PAR_INCLUDE="-I$MPICH_DIR/include"; '
preconfigopts += 'pushd ../visit-3.3.1; mkdir -p third_party; '

# include special code to compiler Conduit. We need to modify bv_conduit.sh to remove options
preconfigopts += 'sed -i "/DMPI_C_COMPILER/d" ./src/tools/dev/scripts/bv_support/bv_conduit.sh; '
preconfigopts += 'sed -i "/DMPI_CXX_COMPILER/d" ./src/tools/dev/scripts/bv_support/bv_conduit.sh; '
preconfigopts += 'sed -i "/DCMAKE_C_COMPILER/d" ./src/tools/dev/scripts/bv_support/bv_conduit.sh; '
preconfigopts += 'sed -i "/DCMAKE_CXX_COMPILER/d" ./src/tools/dev/scripts/bv_support/bv_conduit.sh; '
# end of special code for Conduit
preconfigopts += './src/tools/dev/scripts/build_visit --console --no-%(namelower)s --parallel --llvm --mesagl --vtk --makeflags -j16 --system-python --alt-python-dir /usr '

preconfigopts += '--qwt --qt --silo --hdf5 --system-cmake --icet --ospray --ispc --embree --tbb --xdmf --mfem --conduit <<< "yes" && '
#preconfigopts += '--server-components-only --silo --hdf5 --system-cmake --icet --ospray --ispc --embree --tbb --xdmf --mfem --conduit && '
preconfigopts += 'sed -i "s/gcc TYPE/cc TYPE/g" `hostname`.cmake; sed -i "s/g++/CC/g" `hostname`.cmake; cp `hostname`.cmake ./src/config-site; mkdir build; cd build; '

configopts =  "-DMPI_CXX_COMPILER=CC -DCMAKE_BUILD_TYPE=RelWithDebInfo "
configopts += "-DVISIT_ENABLE_MANUALS=FALSE -DVISIT_DATA_MANUAL_EXAMPLES:BOOL=ON -DVISIT_INSTALL_THIRD_PARTY:BOOL=ON -DVISIT_SLIVR:BOOL=OFF -DVISIT_ENABLE_XDB:BOOL=OFF "

prebuildopts = " pushd ../visit-3.3.1/build; "

preinstallopts = " pushd ../visit-3.3.1/build; "

parallel = 24

#skipsteps = ['install']

runtest = False

install_cmd = "make install "
srcdir = '../visit-3.3.1/src'

sanity_check_paths = {
    'files': ['bin/visit'],
    'dirs': ['data', 'bin', '%(version)s'],
}

moduleclass = 'vis'
