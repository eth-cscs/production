##
# This is an easyconfig file for EasyBuild, see https://github.com/hpcugent/easybuild
#
# Copyright:: Copyright 2013-2016 Juelich Supercomputing Centre, Germany
# Authors::   Bernd Mohr <b.mohr@fz-juelich.de>
#             Markus Geimer <m.geimer@fz-juelich.de>
# License::   3-clause BSD
#
# This work is based on experiences from the UNITE project
# http://apps.fz-juelich.de/unite/
##
# easyblock = 'EB_Score_minus_P'
easyblock = 'ConfigureMake'

name = 'Cube'
version = '4.3.4'
versionsuffix = '-debug'

homepage = 'http://www.scalasca.org/software/cube-4.x/download.html'
description = """Cube, which is used as performance report explorer for Scalasca and
 Score-P, is a generic tool for displaying a multi-dimensional performance space
 consisting of the dimensions (i) performance metric, (ii) call path, and (iii) system
 resource. Each dimension can be represented as a tree, where non-leaf nodes of the tree
 can be collapsed or expanded to achieve the desired level of granularity."""

toolchain = {'name': 'dummy', 'version': 'dummy'}
# !--- mandatory for dummy toolchain:
#  module load Qt/5.7.0-debug

sources = [SOURCELOWER_TAR_GZ]
source_urls = ['http://apps.fz-juelich.de/scalasca/releases/cube/%(version_major_minor)s/dist']
checksums = [ '50f73060f55311cb12c5b3cb354d59fa' ]
patches = [ 'Cube-4.3.4-qt57.patch', 'Cube-4.3.4-qt57isystem.patch' ]

configopts  = " FC_FOR_BUILD=gfortran-4.8 F77_FOR_BUILD=gfortran-4.8 CC_FOR_BUILD=gcc CXX_FOR_BUILD=g++"
configopts += " FC=gfortran-4.8 F77=gfortran-4.8 CC=gcc CXX=g++"

sanity_check_paths = {
    'files': ["bin/cube", ("lib/libcube4.a", "lib64/libcube4.a"), 
                          ("lib/libcube4.so", "lib64/libcube4.so")],
    'dirs': ["include/cube", "include/cubew"],
}

moduleclass = 'perf'



# export PKG_CONFIG_PATH=/users/piccinal/EB/pug_easyconfigs/DORA/DUMMY/forscorep/20/usr/lib64/pkgconfig:$PKG_CONFIG_PATH

#configopts += " CC=gcc FC=gfortran F77=gfortran CXX=g++"
# dependencies = [ ('binutils', '2.26-scorep'), ('libunwind', '1.1scorep') ]
# builddependencies = [ ('zlib', '1.2.8'), ('binutils', '2.25'), ('libunwind', '1.1') ]

# --------------------------- add to modulefile !!!
# QTJG=/apps/common/UES/qt/4.8.6/gnu434
# export QT_QPA_PLATFORM_PLUGIN_PATH=$QTJG/plugins/
# export PATH=$QTJG/bin:$PATH
# export LD_LIBRARY_PATH=$QTJG/lib:$LD_LIBRARY_PATH
# cube: symbol lookup error: Cube/4.3.3/lib/libcube4gui.so.7: 
# undefined symbol: _ZN19QAbstractProxyModel11setItemDataERK11QModelIndexRK4QMapIi8QVariantE
# c++filt _ZN19QAbstractProxyModel11setItemDataERK11QModelIndexRK4QMapIi8QVariantE
# => QAbstractProxyModel::setItemData(QModelIndex const&, QMap<int, QVariant> const&)
# --------------------------- add to modulefile !!!

# --------------------------- qt5:ko
#ko: configopts = ' --with-qt=/apps/common/UES/qt/56unified/5.6/gcc_64/'
## ===> This application failed to start because it could not find or load the Qt platform plugin "xcb"
## export QT_QPA_PLATFORM_PLUGIN_PATH=/apps/common/UES/qt/56unified/5.6/gcc_64/plugins/
## export PATH=/apps/common/UES/qt/56unified/5.6/gcc_64/bin:$PATH
## export LD_LIBRARY_PATH=/apps/common/UES/qt/56unified/5.6/gcc_64/lib:$LD_LIBRARY_PATH
## export LD_LIBRARY_PATH=/apps/common/UES/qt/56unified/5.6/gcc_64/libexec/:$LD_LIBRARY_PATH
## ./cube: symbol lookup error: /apps/common/UES/qt/56unified/5.6/gcc_64/lib/libQt5XcbQpa.so.5: undefined symbol: XIQueryVersion
## https://bugreports.qt.io/browse/QTBUG-38050
## qt/56 conflicts with gcc/434

# --------------------------- qt5src:ko
# compile qt5 from src: KO
# ./configure -opensource -nomake tests -nomake examples -confirm-license -release -shared -no-accessibility -prefix /apps/common/UES/qt/5.6.0 -qt-xcb -no-sql-mysql -no-sql-sqlite  -no-xinput2
# qt.pro => add QMAKE_CXXFLAGS_RELEASE=-fno-inline


