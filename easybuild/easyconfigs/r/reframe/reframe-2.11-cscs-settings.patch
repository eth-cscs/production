diff --git a/reframe/frontend/cli.py b/reframe/frontend/cli.py
index 5f22981..3b7e9fc 100644
--- a/reframe/frontend/cli.py
+++ b/reframe/frontend/cli.py
@@ -268,6 +268,7 @@ def main():
     if options.checkpath:
         load_path = []
         for d in options.checkpath:
+            d = os.path.expandvars(d)
             if not os.path.exists(d):
                 printer.info("%s: path `%s' does not exist. Skipping...\n" %
                              (argparser.prog, d))
diff --git a/reframe/settings.py b/reframe/settings.py
index c181d9d..746f968 100644
--- a/reframe/settings.py
+++ b/reframe/settings.py
@@ -1,5 +1,5 @@
 #
-# Regression settings
+# CSCS ReFrame settings
 #
 
 
@@ -11,17 +11,181 @@ class ReframeSettings:
     _checks_path_recurse = True
     _site_configuration = {
         'systems': {
-            # Generic system used also in unit tests
-            'generic': {
-                'descr': 'Generic example system',
+            'daint': {
+                'descr': 'Piz Daint',
+                'hostnames': ['daint'],
+                'modules_system': 'tmod',
+                'resourcesdir': '/apps/common/regression/resources',
+                'partitions': {
+                    'login': {
+                        'scheduler': 'local',
+                        'modules': [],
+                        'access':  [],
+                        'environs': ['PrgEnv-cray', 'PrgEnv-gnu',
+                                     'PrgEnv-intel', 'PrgEnv-pgi'],
+                        'descr': 'Login nodes',
+                        'max_jobs': 4
+                    },
+
+                    'gpu': {
+                        'scheduler': 'nativeslurm',
+                        'modules': ['daint-gpu'],
+                        'access':  ['--constraint=gpu'],
+                        'environs': ['PrgEnv-cray', 'PrgEnv-gnu',
+                                     'PrgEnv-intel', 'PrgEnv-pgi'],
+                        'descr': 'Hybrid nodes (Haswell/P100)',
+                        'max_jobs': 100,
+                        'resources': {
+                            'switches': ['--switches={num_switches}']
+                        }
+                    },
 
-                # Adjust to your system's hostname
-                'hostnames': ['localhost'],
+                    'mc': {
+                        'scheduler': 'nativeslurm',
+                        'modules': ['daint-mc'],
+                        'access':  ['--constraint=mc'],
+                        'environs': ['PrgEnv-cray', 'PrgEnv-gnu',
+                                     'PrgEnv-intel', 'PrgEnv-pgi'],
+                        'descr': 'Multicore nodes (Broadwell)',
+                        'max_jobs': 100,
+                        'resources': {
+                            'switches': ['--switches={num_switches}']
+                        }
+                    }
+                }
+            },
+
+            'dom': {
+                'descr': 'Dom TDS',
+                'hostnames': ['dom'],
+                'modules_system': 'tmod',
+                'resourcesdir': '/apps/common/regression/resources',
                 'partitions': {
                     'login': {
                         'scheduler': 'local',
                         'modules': [],
                         'access':  [],
+                        'environs': ['PrgEnv-cray', 'PrgEnv-gnu',
+                                     'PrgEnv-intel', 'PrgEnv-pgi'],
+                        'descr': 'Login nodes',
+                        'max_jobs': 4
+                    },
+
+                    'gpu': {
+                        'scheduler': 'nativeslurm',
+                        'modules': ['daint-gpu'],
+                        'access':  ['--constraint=gpu'],
+                        'environs': ['PrgEnv-cray', 'PrgEnv-gnu',
+                                     'PrgEnv-intel', 'PrgEnv-pgi'],
+                        'descr': 'Hybrid nodes (Haswell/P100)',
+                        'max_jobs': 100,
+                        'resources': {
+                            'switches': ['--switches={num_switches}']
+                        }
+                    },
+
+                    'mc': {
+                        'scheduler': 'nativeslurm',
+                        'modules': ['daint-mc'],
+                        'access':  ['--constraint=mc'],
+                        'environs': ['PrgEnv-cray', 'PrgEnv-gnu',
+                                     'PrgEnv-intel', 'PrgEnv-pgi'],
+                        'descr': 'Multicore nodes (Broadwell)',
+                        'max_jobs': 100,
+                        'resources': {
+                            'switches': ['--switches={num_switches}']
+                        }
+                    },
+                }
+            },
+
+            'kesch': {
+                'descr': 'Kesch MCH',
+                'hostnames': ['keschln-\d+'],
+                'modules_system': 'tmod',
+                'resourcesdir': '/apps/common/regression/resources',
+                'partitions': {
+                    'login': {
+                        'scheduler': 'local',
+                        'environs': ['PrgEnv-gnu', 'PrgEnv-cray',
+                                     'PrgEnv-pgi', 'PrgEnv-gnu-gdr'],
+                        'descr': 'Kesch login nodes',
+                    },
+                    'pn': {
+                        'scheduler': 'nativeslurm',
+                        'access': ['--partition=pn-regression'],
+                        'environs': ['PrgEnv-gnu', 'PrgEnv-cray',
+                                     'PrgEnv-pgi', 'PrgEnv-gnu-gdr'],
+                        'descr': 'Kesch post-processing nodes'
+                    },
+
+                    'cn': {
+                        'scheduler': 'nativeslurm',
+                        'access': ['--partition=cn-regression'],
+                        'environs': ['PrgEnv-gnu', 'PrgEnv-cray',
+                                     'PrgEnv-pgi', 'PrgEnv-gnu-gdr'],
+                        'descr': 'Kesch compute nodes',
+                        'resources': {
+                            '_rfm_gpu': ['--gres=gpu:{num_gpus_per_node}']
+                        }
+                    }
+                }
+            },
+
+            'leone': {
+                'descr': 'Leone',
+                'hostnames': ['leone'],
+                'modules_system': 'tmod',
+                'resourcesdir': '/apps/common/regression/resources',
+                'partitions': {
+                    'login': {
+                        'scheduler': 'local',
+                        'environs': ['PrgEnv-gnu'],
+                        'descr': 'Leone login nodes',
+                        'max_jobs': 1
+                    },
+
+                    'normal': {
+                        'scheduler': 'nativeslurm',
+                        'environs': ['PrgEnv-gnu'],
+                        'descr': ('Leone compute nodes - '
+                                  'default partition'),
+                        'max_jobs': 10
+                    },
+                }
+            },
+
+            'monch': {
+                'descr': 'Monch PASC',
+                'hostnames': ['monch'],
+                'modules_system': 'tmod',
+                'resourcesdir': '/apps/common/regression/resources',
+                'partitions': {
+                    'login': {
+                        'scheduler': 'local',
+                        'environs': ['PrgEnv-gnu'],
+                        'descr': 'Monch login nodes',
+                        'max_jobs': 1
+                    },
+
+                    'compute': {
+                        'scheduler': 'slurm+mpirun',
+                        'access': ['--partition=compute'],
+                        'environs': ['PrgEnv-gnu'],
+                        'descr': 'Monch compute nodes',
+                        'max_jobs': 10
+                    }
+                }
+            },
+
+            # Generic system used for cli unit tests
+            'generic': {
+                'descr': 'Generic example system',
+                'partitions': {
+                    'login': {
+                        'scheduler': 'local',
+                        'modules': [],
+                        'access': [],
                         'environs': ['builtin-gcc'],
                         'descr': 'Login nodes'
                     }
@@ -30,7 +194,68 @@ class ReframeSettings:
         },
 
         'environments': {
+            'kesch': {
+                'PrgEnv-gnu': {
+                    'type': 'ProgEnvironment',
+                    'modules': ['PrgEnv-gnu'],
+                    'cc': 'mpicc',
+                    'cxx': 'mpicxx',
+                    'ftn': 'mpif90',
+                },
+                'PrgEnv-pgi': {
+                    'type': 'ProgEnvironment',
+                    'modules': ['/apps/common/regression/prgenv_pgi_17.10_aj'],
+                    'cc': 'mpicc',
+                    'cxx': 'mpicxx',
+                    'ftn': 'mpif90',
+                },
+                'PrgEnv-gnu-gdr': {
+                    'type': 'ProgEnvironment',
+                    'modules': ['gmvapich2/17.02_cuda_8.0_gdr'],
+                    'cc': 'mpicc',
+                    'cxx': 'mpic++',
+                    'ftn': 'mpif90',
+                },
+            },
+            'leone': {
+                'PrgEnv-gnu': {
+                    'type': 'ProgEnvironment',
+                    'modules': ['PrgEnv-gnu/leone-foss-2016b'],
+                    'cc':  'mpicc',
+                    'cxx': 'mpicxx',
+                    'ftn': 'mpif90',
+                },
+            },
+            'monch': {
+                'PrgEnv-gnu': {
+                    'type': 'ProgEnvironment',
+                    'modules': ['PrgEnv-gnu'],
+                    'cc':  'mpicc',
+                    'cxx': 'mpicxx',
+                    'ftn': 'mpif90',
+                }
+            },
             '*': {
+                'PrgEnv-cray': {
+                    'type': 'ProgEnvironment',
+                    'modules': ['PrgEnv-cray'],
+                },
+
+                'PrgEnv-gnu': {
+                    'type': 'ProgEnvironment',
+                    'modules': ['PrgEnv-gnu'],
+                },
+
+                'PrgEnv-intel': {
+                    'type': 'ProgEnvironment',
+                    'modules': ['PrgEnv-intel'],
+                },
+
+                'PrgEnv-pgi': {
+                    'type': 'ProgEnvironment',
+                    'modules': ['PrgEnv-pgi'],
+                },
+
                 'builtin': {
                     'type': 'ProgEnvironment',
                     'cc':  'cc',
@@ -45,6 +270,34 @@ class ReframeSettings:
                     'ftn': 'gfortran',
                 }
             }
+        },
+
+        'modes': {
+            '*': {
+                'maintenance': [
+                    '-c', '$EBROOTREFRAME/cscs-checks', '-R',
+                    '--exec-policy=async',
+                    '--strict',
+                    '--output=$APPS/UES/$USER/regression/maintenance',
+                    '--logdir=$APPS/UES/$USER/regression/maintenance/logs',
+                    '--stage=$SCRATCH/regression/maintenance/stage',
+                    '--reservation=maintenance',
+                    '--save-log-files',
+                    '--tag=maintenance',
+                    '--timestamp=%F_%H-%M-%S'
+                ],
+                'production': [
+                    '-c', '$EBROOTREFRAME/cscs-checks', '-R',
+                    '--exec-policy=async',
+                    '--strict',
+                    '--output=$APPS/UES/$USER/regression/production',
+                    '--logdir=$APPS/UES/$USER/regression/production/logs',
+                    '--stage=$SCRATCH/regression/production/stage',
+                    '--save-log-files',
+                    '--tag=production',
+                    '--timestamp=%F_%H-%M-%S'
+                ]
+            }
         }
     }
 
