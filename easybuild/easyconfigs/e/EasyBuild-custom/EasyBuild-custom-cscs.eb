# contributed by Victor Holanda Rusu, Luca Marsella and Guilherme Peretti Pezzi (CSCS)
easyblock = 'Bundle'

name = 'EasyBuild-custom'
version = 'cscs'

homepage = 'https://github.com/eth-cscs/production/wiki/User-instructions-for-EasyBuild'
description = """Production EasyBuild @ CSCS """

toolchain = {'name': 'dummy', 'version': 'dummy'}

modtclfooter = """
################
# COMMON SETUP #
################
# Local variables
set ebmodule               /apps/common/UES/easybuild/software/EasyBuild/latest
set eb_config_dir          /apps/common/UES/jenkins/production/easybuild
#
# EB_CUSTOM_REPOSITORY
# the following variables should depend on it
#
# XDG_CONFIG_HOME
# EASYBUILD_ROBOT_PATHS
# EASYBUILD_INCLUDE_EASYBLOCKS
# EASYBUILD_EXTERNAL_MODULES_METADATA (if on cray)
#
if { ! [ info exists ::env(EB_CUSTOM_REPOSITORY) ] } {
    setenv EB_CUSTOM_REPOSITORY $eb_config_dir
}
setenv XDG_CONFIG_DIRS                          $::env(EB_CUSTOM_REPOSITORY)
setenv EASYBUILD_ROBOT_PATHS                    $::env(EB_CUSTOM_REPOSITORY)/easyconfigs/:
setenv EASYBUILD_INCLUDE_EASYBLOCKS             $::env(EB_CUSTOM_REPOSITORY)/easyblocks/*.py
setenv EASYBUILD_EXTERNAL_MODULES_METADATA      $::env(EB_CUSTOM_REPOSITORY)/cray_external_modules_metadata.cfg
#
# Checking if we have the command modulecmd
# If so, then module is a c version
# if not then module is a tcl version
#
set status [catch {exec which modulecmd} [list result]]
if { $status == 0 } {
    setenv EASYBUILD_MODULES_TOOL               EnvironmentModulesC
} else {
    setenv EASYBUILD_MODULES_TOOL               EnvironmentModulesTcl
    if { [ file readable "/usr/share/Modules/tcl" ] } {
        prepend-path PATH                       /usr/share/Modules/tcl
    }
}
#########################
# SYSTEM SPECIFIC SETUP #
#########################
# current system name
if { [ string match *esch* $::env(HOSTNAME) ] } {
 set system [regsub {[cl]n-[0-9]+} $::env(HOSTNAME) ""]
} else { 
 set system [regsub {[0-9]+} $::env(HOSTNAME) ""]
}
# system specific setup
if { [ string match *daint* $system ] || [ string match *dom* $system ] } {
    setenv EASYBUILD_OPTARCH                    $::env(CRAY_CPU_TARGET)
    setenv EASYBUILD_RECURSIVE_MODULE_UNLOAD    0
} elseif { [ string match *esch* $system ] } {
    setenv EASYBUILD_MODULE_NAMING_SCHEME       LowercaseModuleNamingScheme   
} else {
    setenv EASYBUILD_RECURSIVE_MODULE_UNLOAD    1
}
#
# EASYBUILD_PREFIX
# the following variables should depend on it
#
# EASYBUILD_INSTALLPATH
#
if { ! [ info exists ::env(EASYBUILD_PREFIX) ] } {
    if { [ string match *daint* $system ] || [ string match *dom* $system ] } {
        setenv EASYBUILD_PREFIX                 $::env(HOME)/easybuild/$system/$::env(CRAY_CPU_TARGET)
    } else {
        setenv EASYBUILD_PREFIX                 $::env(HOME)/easybuild/$system
    }
} else {
    setenv EASYBUILD_PREFIX                     $::env(EASYBUILD_PREFIX)
}
setenv EASYBUILD_INSTALLPATH                    $::env(EASYBUILD_PREFIX)
#
# If not set, EASYBUILD_BUILDPATH and EASYBUILD_TMPDIR will point to /dev/shm/$USER/easbuild/stage
#
if { [ info exists ::env(EASYBUILD_TMPDIR) ] } {
    setenv EASYBUILD_TMPDIR                     $::env(EASYBUILD_TMPDIR)
} else {
    setenv EASYBUILD_TMPDIR                     /dev/shm/$::env(USER)/easybuild/stage/tmp
}
if { [ info exists ::env(EASYBUILD_BUILDPATH) ] } {
    setenv EASYBUILD_BUILDPATH                  $::env(EASYBUILD_BUILDPATH)
} else {
    setenv EASYBUILD_BUILDPATH                  /dev/shm/$::env(USER)/easybuild/stage/build
}
#
# If not set, define EASYBUILD_SOURCEPATH
#
if { ! [ info exists ::env(EASYBUILD_SOURCEPATH) ] } {
    if { [ file writable "/apps/common/easybuild/sources" ] } {
        setenv EASYBUILD_SOURCEPATH                 /apps/common/easybuild/sources
    } else {
        setenv EASYBUILD_SOURCEPATH                 $::env(HOME)/sources
    }
}
###############
# FINAL TOUCH #
###############
# Adding easybuild installed software to the list of modules
prepend-path MODULEPATH                         $::env(EASYBUILD_INSTALLPATH)/modules/all
# Loading easybuild module
module load /apps/common/UES/easybuild/modules/all/EasyBuild/latest
"""
moduleclass = 'devel'
