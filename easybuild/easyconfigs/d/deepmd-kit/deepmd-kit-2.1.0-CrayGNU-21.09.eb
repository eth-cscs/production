easyblock = "CmdCp"

name = 'deepmd-kit'
version = '2.1.0'

homepage = 'https://github.com/deepmodeling/deepmd-kit/'
description = """DeePMD-kit is a package written in Python/C++, designed to
minimize the effort required to build deep learning based model of interatomic
potential energy and force field and to perform molecular dynamics."""

local_py_maj_ver = '3'
local_py_min_ver = '9'
local_py_rev_ver = '7'

local_pyshortver = "%s.%s" % (local_py_maj_ver, local_py_min_ver)
local_pyver      = "%s.%s.%s" % (local_py_maj_ver, local_py_min_ver, local_py_rev_ver)

toolchain = {'name': 'CrayGNU', 'version': '21.09'}
toolchainopts = {'dynamic': True, 'verbose': False}

builddependencies = [
    ('CMake', '3.22.1', '', True),
]

dependencies = [
    ('TensorFlow', '2.5.0'),
    ('xdrfile', '1.1.4'),
]

local_skbuild_whl = 'scikit_build-0.10.0-py2.py3-none-any.whl'

sources = [
    {
        'filename': local_skbuild_whl,
        'source_urls': ['https://pypi.python.org/packages/source/s/scikit_build/'],
        'extract_cmd': "cp %s %(builddir)s",
    },
    {
        'filename': SOURCE_TAR_GZ,
        'source_urls': [PYPI_LOWER_SOURCE],
    }

]


with_configure = False

tf_k8_opt = '$EBROOTTENSORFLOW/k8-opt/bin/tensorflow/'
tf_k8_opt = '$EBROOTTENSORFLOW/lib/python3.9/site-packages/tensorflow'

prepare_libs_dir = "mkdir -p %(installdir)s/tensorflow/include %(installdir)s/tensorflow/lib && "
prepare_libs_dir += "export TF_INCLUDE=%(installdir)s/tensorflow/include && "
prepare_libs_dir += "export TF_LIB=%(installdir)s/tensorflow/lib && "
prepare_libs_dir += "export LD_LIBRARY_PATH=$TF_LIB:$LD_LIBRARY_PATH && "
prepare_libs_dir += "export LD_LIBRARY_PATH=%(installdir)s/lib:$LD_LIBRARY_PATH && "
prepare_libs_dir += "export LIBRARY_PATH=$TF_LIB:$LIBRARY_PATH && "
prepare_libs_dir += "export LIBRARY_PATH=%(installdir)s/lib:$LIBRARY_PATH && "
prepare_libs_dir += "ln -sf  {tf_k8_opt}/include/external/nsync/public/nsync* $TF_INCLUDE && "
prepare_libs_dir += "ln -snf {tf_k8_opt}/include/Eigen $TF_INCLUDE && "
prepare_libs_dir += "ln -snf {tf_k8_opt}/include/unsupported $TF_INCLUDE && "
prepare_libs_dir += "ln -snf {tf_k8_opt}/include/google $TF_INCLUDE && "
prepare_libs_dir += "ln -snf {tf_k8_opt}/include/absl $TF_INCLUDE && "
prepare_libs_dir += "ln -snf {tf_k8_opt} $TF_INCLUDE && "
prepare_libs_dir += "ln -snf {tf_k8_opt}/include/third_party $TF_INCLUDE && "
prepare_libs_dir += "ln -sf  $EBROOTTENSORFLOW/lib/libtensorflow_cc.so $TF_LIB && "
prepare_libs_dir += "ln -sf  $EBROOTTENSORFLOW/lib/libtensorflow_cc.so $TF_LIB/libtensorflow_cc.so.2 && "
prepare_libs_dir += "ln -sf  $EBROOTTENSORFLOW/lib/libtensorflow_framework.so $TF_LIB && "
prepare_libs_dir += "ln -sf  $EBROOTTENSORFLOW/lib/libtensorflow_framework.so $TF_LIB/libtensorflow_framework.so.2"

build_str  = "%s && " % prepare_libs_dir.format(tf_k8_opt=tf_k8_opt)
build_str += "pip install --prefix=%(builddir)s/install %(builddir)s/" + "%s && " % local_skbuild_whl
build_str += "cd deepmd-kit-%(version)s && "
build_str += "pip install --prefix=%(builddir)s/install . && "
build_str += "echo '=================================================================================================================' && "
build_str += "mkdir source/build && "
build_str += "cd source/build; CC=/opt/gcc/8.3.0/bin/gcc CXX=/opt/gcc/8.3.0/bin/g++ cmake -DXDRFILE_ROOT=$EBROOTXDRFILE -DTENSORFLOW_ROOT=$EBROOTTENSORFLOW -DCMAKE_INSTALL_PREFIX=%(builddir)s/install --debug-trycompile .. && "
build_str += "cd source/build; make install -j4 && "
build_str += "cd source/build; make lammps -j4"

cmds_map = [
    ('deepmd-kit-%(version)s.tar.gz', build_str),
    (local_skbuild_whl, 'ls'),
]

files_to_copy = [
	(['%(builddir)s/install/bin'], '%(installdir)s'),
	(['%(builddir)s/install/include'], '%(installdir)s'),
	(['%(builddir)s/install/lib'], '%(installdir)s'),
	(['%(builddir)s/deepmd-kit-%(version)s/source/build/USER-DEEPMD'], '%(installdir)s'),
]

sanity_check_paths = {
    'files': ['bin/dp_ipi', 'bin/dp'],
    'dirs': ['include/deepmd'],
}

postinstallcmds = [prepare_libs_dir.format(tf_k8_opt=tf_k8_opt), 'rm -rf /dev/shm/$USER/bazelout/' ]

modextrapaths = {                                                                  
    'PYTHONPATH' : 'lib/python%s/site-packages' % local_pyshortver,
}

moduleclass = 'devel'
