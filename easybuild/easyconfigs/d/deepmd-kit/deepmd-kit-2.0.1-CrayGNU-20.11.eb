#
easyblock = 'Conda'

name = 'deepmd-kit'
version = '2.0.1'

homepage = 'https://github.com/deepmodeling/deepmd-kit'
description = """DeePMD-kit is a package written in Python/C++, designed to minimize
the effort required to build deep learning based model of interatomic potential energy
and force field and to perform molecular dynamics"""

toolchain = {'name': 'CrayGNU', 'version': '20.11'}
toolchainopts = {'pic': True, 'verbose': False}

dependencies = [
    ('Miniconda3', '4.10.3', '', True),
    ('NCCL', '2.8.4', '', True),
]

requirements  = ' _libgcc_mutex=0.1=main'
requirements += ' _openmp_mutex=4.5=1_gnu'
requirements += ' absl-py=0.13.0=py39h06a4308_0'
requirements += ' asn1crypto=1.4.0=py_0'
requirements += ' astor=0.8.1=py39h06a4308_0'
requirements += ' astunparse=1.6.3=py_0'
requirements += ' blas=1.0=mkl'
requirements += ' blinker=1.4=py39h06a4308_0'
requirements += ' brotlipy=0.7.0=py39h27cfd23_1003'
requirements += ' c-ares=1.17.1=h27cfd23_0'
requirements += ' ca-certificates=2021.7.5=h06a4308_1'
requirements += ' cached-property=1.5.2=py_0'
requirements += ' cachetools=4.2.2=pyhd3eb1b0_0'
requirements += ' certifi=2021.5.30=py39h06a4308_0'
requirements += ' cffi=1.14.6=py39h400218f_0'
requirements += ' chardet=4.0.0=py39h06a4308_1003'
requirements += ' charset-normalizer=2.0.4=pyhd3eb1b0_0'
requirements += ' click=8.0.1=pyhd3eb1b0_0'
requirements += ' conda=4.10.3=py39h06a4308_0'
requirements += ' conda-package-handling=1.7.3=py39h27cfd23_1'
requirements += ' coverage=5.5=py39h27cfd23_2'
requirements += ' cryptography=3.4.7=py39hd23ed53_0'
requirements += ' cudatoolkit=11.3.1=h2bc3f7f_2'
requirements += ' cudatoolkit-dev=11.3.1=py39h3811e60_0'
requirements += ' cudnn=8.2.1=cuda11.3_0'
requirements += ' cupti=11.3.1=0'
requirements += ' cython=0.29.24=py39h295c915_0'
requirements += ' dargs=0.2.6=pyh7a5ff2f_0'
requirements += ' deepmd-kit=2.0.1=py39_0_cuda11.3_gpu'
requirements += ' gast=0.4.0=pyhd3eb1b0_0'
requirements += ' google-auth=1.21.3=py_0'
requirements += ' google-auth-oauthlib=0.4.1=py_2'
requirements += ' google-pasta=0.2.0=pyhd3eb1b0_0'
requirements += ' grpcio=1.36.1=py39h2157cd5_1'
requirements += ' h5py=3.2.1=py39h6c542dc_0'
requirements += ' hdf5=1.10.6=hb1b8bf9_0'
requirements += ' idna=3.2=pyhd3eb1b0_0'
requirements += ' importlib-metadata=4.6.4=py39h06a4308_0'
requirements += ' intel-openmp=2021.3.0=h06a4308_3350'
requirements += ' keras-preprocessing=1.1.2=pyhd3eb1b0_0'
requirements += ' ld_impl_linux-64=2.35.1=h7274673_9'
requirements += ' libdeepmd=2.0.1=1_cuda11.3_gpu'
requirements += ' libedit=3.1.20181209=hc058e9b_0'
requirements += ' libffi=3.3=he6710b0_2'
requirements += ' libgcc-ng=9.3.0=h5101ec6_17'
requirements += ' libgfortran-ng=7.5.0=ha8ba4b0_17'
requirements += ' libgfortran4=7.5.0=ha8ba4b0_17'
requirements += ' libgomp=9.3.0=h5101ec6_17'
requirements += ' libprotobuf=3.17.2=h4ff587b_1'
requirements += ' libstdcxx-ng=9.3.0=hd4cf53a_17'
requirements += ' libtensorflow_cc=2.5.0=gpu_cuda11.3_0'
requirements += ' markdown=3.3.4=py39h06a4308_0'
requirements += ' mkl=2021.3.0=h06a4308_520'
requirements += ' mkl-service=2.4.0=py39h7f8727e_0'
requirements += ' mkl_fft=1.3.0=py39h42c9631_2'
requirements += ' mkl_random=1.2.2=py39h51133e4_0'
requirements += ' ncurses=6.2=he6710b0_1'
requirements += ' numpy=1.20.3=py39hf144106_0'
requirements += ' numpy-base=1.20.3=py39h74d4b33_0'
requirements += ' oauthlib=3.1.1=pyhd3eb1b0_0'
requirements += ' openssl=1.1.1l=h7f8727e_0'
requirements += ' opt_einsum=3.3.0=pyhd3eb1b0_1'
requirements += ' pip=21.2.4=py37h06a4308_0'
requirements += ' protobuf=3.17.2=py39h295c915_0'
requirements += ' pyasn1=0.4.8=pyhd3eb1b0_0'
requirements += ' pyasn1-modules=0.2.8=py_0'
requirements += ' pycosat=0.6.3=py39h27cfd23_0'
requirements += ' pycparser=2.20=py_2'
requirements += ' pyjwt=2.1.0=py39h06a4308_0'
requirements += ' pyopenssl=20.0.1=pyhd3eb1b0_1'
requirements += ' pysocks=1.7.1=py39h06a4308_0'
requirements += ' python=3.9.6=h12debd9_1'
requirements += ' python-flatbuffers=1.12=pyhd3eb1b0_0'
requirements += ' python-hostlist=1.21=pyh9f0ad1d_0'
requirements += ' python_abi=3.9=2_cp39'
requirements += ' pyyaml=5.4.1=py39h27cfd23_1'
requirements += ' readline=8.1=h27cfd23_0'
requirements += ' requests=2.26.0=pyhd3eb1b0_0'
requirements += ' requests-oauthlib=1.3.0=py_0'
requirements += ' rsa=4.7.2=pyhd3eb1b0_1'
requirements += ' ruamel_yaml=0.15.100=py39h27cfd23_0'
requirements += ' scipy=1.7.1=py39h292c36d_2'
requirements += ' setuptools=52.0.0=py39h06a4308_0'
requirements += ' six=1.16.0=pyhd3eb1b0_0'
requirements += ' sqlite=3.36.0=hc218d9a_0'
requirements += ' tensorboard=2.5.0=py_0'
requirements += ' tensorboard-plugin-wit=1.6.0=py_0'
requirements += ' tensorflow-base=2.5.0=gpu_py39h7c1560b_0'
requirements += ' tensorflow-estimator=2.5.0=pyh7b7c402_0'
requirements += ' termcolor=1.1.0=py39h06a4308_1'
requirements += ' tk=8.6.10=hbc83047_0'
requirements += ' tqdm=4.36.1=py_0'
requirements += ' typing_extensions=3.10.0.0=pyhca03da5_0'
requirements += ' tzdata=2021a=h5d7bf9c_0'
requirements += ' urllib3=1.26.6=pyhd3eb1b0_1'
requirements += ' werkzeug=1.0.1=pyhd3eb1b0_0'
requirements += ' wheel=0.35.1=pyhd3eb1b0_0'
requirements += ' wrapt=1.12.1=py39he8ac12f_1'
requirements += ' xz=5.2.5=h7b6447c_0'
requirements += ' yaml=0.2.5=h7b6447c_0'
requirements += ' zipp=3.5.0=pyhd3eb1b0_0'
requirements += ' zlib=1.2.11=h7b6447c_3'
# channels
requirements += ' -c https://conda.deepmodeling.org'
requirements += ' -c conda-forge'

_ext_preinstallopts = ('. %(installdir)s/bin/activate && '
                       'module unload atp && '
                       'export MPICC=cc && '
                       'export HOROVOD_CUDA_HOME=%(installdir)s && '
                       'export HOROVOD_GPU_OPERATIONS=NCCL && '
                       'export HOROVOD_NCCL_HOME=$EBROOTNCCL && '
                       'export HOROVOD_NCCL_LINK=SHARED && '
                       'export HOROVOD_BUILD_CUDA_CC_LIST=60 && '
                       'export HOROVOD_MPICXX_SHOW="CC --cray-print-opts=all" && '
                       'export HOROVOD_WITH_TENSORFLOW=1 && '
                       'export HOROVOD_WITHOUT_PYTORCH=1 && '
                       'export HOROVOD_WITHOUT_MXNET=1 && '
                       'export HOROVOD_WITHOUT_GLOO=1 && '
                       'export CPATH=%(installdir)s/include:$CPATH && ')

exts_defaultclass = 'PythonPackage'
exts_default_options = {
    'req_py_majver': '3',
    'req_py_minver': '9',
    'source_urls': [PYPI_SOURCE],
    'unpack_sources': False,
    'use_pip': True,
    'preinstallopts': _ext_preinstallopts
}
exts_list = [
    ('psutil', '5.8.0'),
    ('cloudpickle', '2.0.0'),
    ('mpi4py', '3.1.1'),
    ('horovod', '0.22.1', {
        'installopts': '--no-cache-dir',
        'unpack_sources': True
    })
]

modextravars = {
    'NCCL_DEBUG': 'INFO',
    'NCCL_IB_HCA': 'ipogif0',
    'NCCL_IB_CUDA_SUPPORT': '1'
}

sanity_check_paths = {
    'files': ['bin/dp', 'bin/horovodrun'],
    'dirs': ['lib/python3.9/site-packages/deepmd'],
}

sanity_check_commands = ['python -c "import deepmd; assert deepmd.__version__ == \'%(version)s\'"']

moduleclass = 'lib'
