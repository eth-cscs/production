# Contributed by Theofilos Manitaras (cscs)

easyblock = 'PythonPackage'

name = 'mpi4py'
version = '2.0.0'
python = 'python'
pyver = '3'
versionsuffix = '-%s%s-timed-pingpong' % (python, pyver)
# pyshortver = '3.5'

homepage = 'https://bitbucket.org/mpi4py/mpi4py'
description = """MPI for Python (mpi4py) provides bindings of the Message
Passing Interface (MPI) standard for the Python programming language, allowing
any Python program to exploit multiple processors."""

req_py_majver = '3'
req_py_minver = '5'

toolchain = {'name': 'CrayGNU', 'version': '17.08'}
source_urls = [BITBUCKET_DOWNLOADS]
sources = [SOURCE_TAR_GZ]
patches = ['mpi4py-%(version)s-timed-pingpong.patch']
dependencies = [ ('PyExtensions', '3.5') ]

# force rebuilding everything, including patched files
buildopts = '--force'

sanity_check_paths = {
    'files': [],
    'dirs': ['lib/python3.5/site-packages/mpi4py'],
}

# This will fail if on compute node with "srun: error: Unable to create job step"
## check that timed pingpong routines that are added via the patch are available
#sanity_check_commands = [
#    ('srun -C gpu -t1 -n1 python3', '-c "from mpi4py.MPI import Comm; import sys; sys.exit((1, 0)[\'PingpongRS\' in dir(Comm)])"'),
#]

moduleclass = 'mpi'
