# created by Luca Marsella (CSCS)
easyblock = 'ConfigureMake'

name = 'QuantumESPRESSO'
version = '6.6a2'
versionsuffix = '-cuda'

homepage = 'http://www.quantum-espresso.org/'
description = """Quantum ESPRESSO is an integrated suite of computer codes for
electronic-structure calculations and materials modeling at the nanoscale. It
is based on density-functional theory, plane waves, and pseudopotentials (both
norm-conserving and ultrasoft). 

Note: PGI Fortran gives the warning "ieee_inexact FORTRAN STOP" with QE GPU.  
Set NO_STOP_MESSAGES=1 in your batch script to avoid the warning.
More details on the PGI User Forum at https://www.pgroup.com/userforum
"""

toolchain = {'name': 'CrayPGI', 'version': '20.10'}
toolchainopts = {'usempi': True, 'verbose': False, 'openmp': True}

source_urls = ['https://gitlab.com/QEF/q-e-gpu/-/archive/qe-gpu-%(version)s/']
sources = ['q-e-gpu-qe-gpu-%(version)s.tar.bz2']

builddependencies = [
    ('cudatoolkit', EXTERNAL_MODULE),
]

dependencies = [
    ('cray-hdf5', EXTERNAL_MODULE),
    ('intel', EXTERNAL_MODULE),
    ('libxc', '4.3.4')
]

# Scalapack disabled: the GPU eigensolver can outperform the parallel CPU one 
configopts = ' CUDA_HOME=$CUDATOOLKIT_HOME CC=cc FC=ftn MPIF90=ftn FCFLAGS="CUDA_HOME=$CUDATOOLKIT_HOME" FFT_LIBS="-L$MKLROOT/lib/intel64 -lmkl_intel_lp64 -lmkl_intel_thread -lmkl_core" --with-libxc=yes --with-libxc-prefix=$EBROOTLIBXC --with-libxc-include=$EBROOTLIBXC/include --with-cuda=$CUDATOOLKIT_HOME --with-cuda-cc=60 --with-cuda-runtime=%(cudashortver)s --enable-openmp --enable-parallel --with-scalapack=no '

# the experimental CUDA-Aware MPI (-D__GPU_MPI) does not work! 
# use MKL FFT instead of FFTW and add HDF5
prebuildopts = """
    sed -i -e '/^DFLAGS/ s/$/ -D__DFTI/' -e '/^IFLAGS/ s#$# -I${MKLROOT}/include -I$(MKLROOT)/include/fftw -I$(EBROOTHDF5)/include#' -e '/^HDF5_LIBS/ s#$# -L$(EBROOTHDF5)/lib -lhdf5_hl -lhdf5 -lhdf5hl_fortran -lhdf5_fortran#' -e 's/^CUDA_F90FLAGS=/CUDA_F90FLAGS  = CUDA_HOME=$(CUDATOOLKIT_HOME) /' -e 's/^CPPFLAGS       = /CPPFLAGS       = -P -traditional -Uvector /' -e 's/^CFLAGS .*/CFLAGS         = -O3 $(DFLAGS) $(IFLAGS)/' -e 's/^F90FLAGS .*/F90FLAGS       = -fast -Mcache_align -Mpreprocess -Mlarge_arrays -mp $(FDFLAGS) $(CUDA_F90FLAGS) $(IFLAGS) $(MODFLAGS)/' -e 's/^FFLAGS .*/FFLAGS         = $(F90FLAGS)/' -e 's#^LDFLAGS        = #LDFLAGS        = CUDA_HOME=$(CUDATOOLKIT_HOME) -mp -lcusparse -lcusolver -lcurand -lcublas -Bstatic_pgi #' make.inc &&
 OPTFLAGS=CUDA_HOME=$CUDATOOLKIT_HOME && cat make.inc && """
# targets 'hp' and 'gwl' of the group "all" fail with QE GPU
buildopts = " pwall cp ld1 tddfpt xspectra "

sanity_check_paths = {
    'files': ['bin/pw.x'],
    'dirs': [''],
}

moduleclass = 'chem'
