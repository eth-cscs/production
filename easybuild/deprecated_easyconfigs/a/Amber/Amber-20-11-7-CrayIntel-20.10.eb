# @author: Victor Holanda

easyblock = 'MakeCp'

name = 'Amber'
local_ambertools_update = 11
local_amber_update = 7
version = '20-%(local_ambertools_update)s-%(local_amber_update)s' % {
    'local_ambertools_update': local_ambertools_update,
    'local_amber_update': local_amber_update
}

homepage = 'http://ambermd.org/'
description = """Amber (Assisted Model Building with Energy Refinement)
is software for performing molecular dynamics and structure prediction"""

toolchain = {'name': 'CrayIntel', 'version': '20.10'}
toolchainopts = {'verbose': False}

sources = [
    '/apps/common/UES/easybuild/sources/a/%(name)s/Amber20.tar.bz2',
    '/apps/common/UES/easybuild/sources/a/%(name)s/AmberTools20.tar.bz2',
]
patches = ['amber20-nvcc.patch']

builddependencies = [
    ('cray-hdf5', EXTERNAL_MODULE),
    ('cray-netcdf', EXTERNAL_MODULE),
]
dependencies = [
    ('bzip2', '1.0.6'),
    ('zlib', '1.2.11'),
]

# single make process since parallel builds might fail
# when uncommenting the next line make sure to change all make -j to make -j1
# maxparallel = 1

prebuildopts  = "module unload cray-libsci && module unload cray-libsci_acc && module load gcc/8.3.0 && "
prebuildopts += "cd .. && mv amber20_src/* . && export AMBERHOME=%(builddir)s; "
prebuildopts += "./update_amber --update-to=AmberTools.%(local_ambertools_update)s,Amber.%(local_amber_update)s && " % {
    'local_ambertools_update': local_ambertools_update,
    'local_amber_update': local_amber_update
}

# serial build
prebuildopts += "./configure      -crayxt5 -noX11 --skip-python --with-netcdf $EBROOTNETCDF intel <<< N && "
prebuildopts += "echo 'PMEMD_CU_INCLUDES += -I$(MPICH_DIR)/include' >> config.h; "
prebuildopts += "make -j && make install && "
# openmp build
prebuildopts += "./configure      -crayxt5 -noX11 -openmp --skip-python --with-netcdf $EBROOTNETCDF intel <<< N && "
prebuildopts += "echo 'PMEMD_CU_INCLUDES += -I$(MPICH_DIR)/include' >> config.h; "
prebuildopts += "make -j && make install && "
# mpi openmp build
prebuildopts += "./configure -mpi -crayxt5 -noX11 -openmp --skip-python --with-netcdf $EBROOTNETCDF intel <<< N && "
prebuildopts += "echo 'PMEMD_CU_INCLUDES += -I$(MPICH_DIR)/include' >> config.h; "
prebuildopts += "make -j && make install && "
# mpi only build
prebuildopts += "./configure -mpi -crayxt5 -noX11         --skip-python --with-netcdf $EBROOTNETCDF intel <<< N && "
prebuildopts += "echo 'PMEMD_CU_INCLUDES += -I$(MPICH_DIR)/include' >> config.h; "
prebuildopts += "make -j && make install && "

buildopts = 'install'

whatis = [
    "%(name)s 20 && AmberTools 20",
    "AmberTools patch level %s" % local_ambertools_update,
    "%(name)s patch level %(local_amber_update)s" % {
        'local_amber_update': local_amber_update,
        'name': name
    }
]
files_to_copy = []
buildininstalldir = True

sanity_check_paths = {
    'files': ['bin/pmemd.MPI', 'bin/pmemd'],
    'dirs': [],
}

modextravars = {'AMBERHOME': '%(builddir)s'}

moduleclass = 'bio'
